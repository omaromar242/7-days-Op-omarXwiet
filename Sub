--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 205 | Scripts: 43 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.omarXwiet
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["DisplayOrder"] = 1000;
G2L["1"]["Name"] = [[omarXwiet]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.omarXwiet.sigma
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["Active"] = true;
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(53, 53, 53);
G2L["2"]["Size"] = UDim2.new(0.32998, 0, 0.58414, 0);
G2L["2"]["Position"] = UDim2.new(0.3125, 0, 0.19298, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Name"] = [[sigma]];
G2L["2"]["BackgroundTransparency"] = 0.2;


-- StarterGui.omarXwiet.sigma.UIStroke
G2L["3"] = Instance.new("UIStroke", G2L["2"]);
G2L["3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["3"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.UICorner
G2L["4"] = Instance.new("UICorner", G2L["2"]);
G2L["4"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection
G2L["5"] = Instance.new("Frame", G2L["2"]);
G2L["5"]["Active"] = true;
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(78, 78, 78);
G2L["5"]["Size"] = UDim2.new(0.2198, 0, 1, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Name"] = [[Selection]];


-- StarterGui.omarXwiet.sigma.Selection.Esp
G2L["6"] = Instance.new("TextButton", G2L["5"]);
G2L["6"]["TextWrapped"] = true;
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["TextSize"] = 14;
G2L["6"]["TextScaled"] = true;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(51, 94, 33);
G2L["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6"]["Size"] = UDim2.new(0.83784, 0, 0.14881, 0);
G2L["6"]["Name"] = [[Esp]];
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Text"] = [[ESP]];
G2L["6"]["Position"] = UDim2.new(0.07176, 0, 0.05268, 0);


-- StarterGui.omarXwiet.sigma.Selection.Esp.UICorner
G2L["7"] = Instance.new("UICorner", G2L["6"]);
G2L["7"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection.Esp.UIStroke
G2L["8"] = Instance.new("UIStroke", G2L["6"]);
G2L["8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["8"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Selection.UICorner
G2L["9"] = Instance.new("UICorner", G2L["5"]);
G2L["9"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection.UIStroke
G2L["a"] = Instance.new("UIStroke", G2L["5"]);
G2L["a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["a"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Selection.Misc
G2L["b"] = Instance.new("TextButton", G2L["5"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextScaled"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(51, 94, 33);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["Size"] = UDim2.new(0.83784, 0, 0.14881, 0);
G2L["b"]["Name"] = [[Misc]];
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Text"] = [[Misc]];
G2L["b"]["Position"] = UDim2.new(0.07176, 0, 0.61546, 0);


-- StarterGui.omarXwiet.sigma.Selection.Misc.UICorner
G2L["c"] = Instance.new("UICorner", G2L["b"]);
G2L["c"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection.Misc.UIStroke
G2L["d"] = Instance.new("UIStroke", G2L["b"]);
G2L["d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["d"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Selection.Farm
G2L["e"] = Instance.new("TextButton", G2L["5"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextScaled"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(51, 94, 33);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["Size"] = UDim2.new(0.83784, 0, 0.14881, 0);
G2L["e"]["Name"] = [[Farm]];
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[Farm]];
G2L["e"]["Position"] = UDim2.new(0.07176, 0, 0.23947, 0);


-- StarterGui.omarXwiet.sigma.Selection.Farm.UICorner
G2L["f"] = Instance.new("UICorner", G2L["e"]);
G2L["f"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection.Farm.UIStroke
G2L["10"] = Instance.new("UIStroke", G2L["e"]);
G2L["10"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["10"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Selection.gun config
G2L["11"] = Instance.new("TextButton", G2L["5"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextScaled"] = true;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(51, 94, 33);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["Size"] = UDim2.new(0.83784, 0, 0.14881, 0);
G2L["11"]["Name"] = [[gun config]];
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[Config]];
G2L["11"]["Position"] = UDim2.new(0.07176, 0, 0.42368, 0);


-- StarterGui.omarXwiet.sigma.Selection.gun config.UICorner
G2L["12"] = Instance.new("UICorner", G2L["11"]);
G2L["12"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection.gun config.UIStroke
G2L["13"] = Instance.new("UIStroke", G2L["11"]);
G2L["13"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["13"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Selection.Keysystem
G2L["14"] = Instance.new("TextButton", G2L["5"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextScaled"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(51, 94, 33);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["Size"] = UDim2.new(0.83784, 0, 0.14881, 0);
G2L["14"]["Name"] = [[Keysystem]];
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[Key System]];
G2L["14"]["Position"] = UDim2.new(0.07176, 0, 0.795, 0);


-- StarterGui.omarXwiet.sigma.Selection.Keysystem.UICorner
G2L["15"] = Instance.new("UICorner", G2L["14"]);
G2L["15"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Selection.Keysystem.UIStroke
G2L["16"] = Instance.new("UIStroke", G2L["14"]);
G2L["16"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["16"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame
G2L["17"] = Instance.new("Frame", G2L["2"]);
G2L["17"]["Visible"] = false;
G2L["17"]["Active"] = true;
G2L["17"]["BorderSizePixel"] = 0;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(53, 53, 53);
G2L["17"]["Size"] = UDim2.new(0.76082, 0, 1, 0);
G2L["17"]["Position"] = UDim2.new(0.23918, 0, 0, 0);
G2L["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17"]["Name"] = [[EspFrame]];
G2L["17"]["BackgroundTransparency"] = 0.2;


-- StarterGui.omarXwiet.sigma.EspFrame.UIStroke
G2L["18"] = Instance.new("UIStroke", G2L["17"]);
G2L["18"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["18"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame.UICorner
G2L["19"] = Instance.new("UICorner", G2L["17"]);
G2L["19"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.EspFrame.second
G2L["1a"] = Instance.new("TextButton", G2L["17"]);
G2L["1a"]["TextWrapped"] = true;
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["TextScaled"] = true;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["Size"] = UDim2.new(0.74851, 0, 0.14881, 0);
G2L["1a"]["Name"] = [[second]];
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[Esp Animals]];
G2L["1a"]["Position"] = UDim2.new(0.1236, 0, 0.22458, 0);


-- StarterGui.omarXwiet.sigma.EspFrame.second.UICorner
G2L["1b"] = Instance.new("UICorner", G2L["1a"]);
G2L["1b"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.EspFrame.second.UIStroke
G2L["1c"] = Instance.new("UIStroke", G2L["1a"]);
G2L["1c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["1c"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame.second.soundclick
G2L["1d"] = Instance.new("LocalScript", G2L["1a"]);
G2L["1d"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.EspFrame.third
G2L["1e"] = Instance.new("TextButton", G2L["17"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["Size"] = UDim2.new(0.74851, 0, 0.14881, 0);
G2L["1e"]["Name"] = [[third]];
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[Esp Scrap]];
G2L["1e"]["Position"] = UDim2.new(0.1236, 0, 0.40152, 0);


-- StarterGui.omarXwiet.sigma.EspFrame.third.UICorner
G2L["1f"] = Instance.new("UICorner", G2L["1e"]);
G2L["1f"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.EspFrame.third.UIStroke
G2L["20"] = Instance.new("UIStroke", G2L["1e"]);
G2L["20"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["20"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame.third.soundclick
G2L["21"] = Instance.new("LocalScript", G2L["1e"]);
G2L["21"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.EspFrame.five
G2L["22"] = Instance.new("TextButton", G2L["17"]);
G2L["22"]["TextWrapped"] = true;
G2L["22"]["BorderSizePixel"] = 0;
G2L["22"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["TextSize"] = 14;
G2L["22"]["TextScaled"] = true;
G2L["22"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["22"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["22"]["Size"] = UDim2.new(0.74851, 0, 0.14881, 0);
G2L["22"]["Name"] = [[five]];
G2L["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22"]["Text"] = [[Esp berry]];
G2L["22"]["Position"] = UDim2.new(0.1236, 0, 0.76164, 0);


-- StarterGui.omarXwiet.sigma.EspFrame.five.UICorner
G2L["23"] = Instance.new("UICorner", G2L["22"]);
G2L["23"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.EspFrame.five.UIStroke
G2L["24"] = Instance.new("UIStroke", G2L["22"]);
G2L["24"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["24"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame.five.soundclick
G2L["25"] = Instance.new("LocalScript", G2L["22"]);
G2L["25"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.EspFrame.four
G2L["26"] = Instance.new("TextButton", G2L["17"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["TextSize"] = 14;
G2L["26"]["TextScaled"] = true;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26"]["Size"] = UDim2.new(0.74851, 0, 0.14881, 0);
G2L["26"]["Name"] = [[four]];
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Text"] = [[Esp Players]];
G2L["26"]["Position"] = UDim2.new(0.1236, 0, 0.57711, 0);


-- StarterGui.omarXwiet.sigma.EspFrame.four.UICorner
G2L["27"] = Instance.new("UICorner", G2L["26"]);
G2L["27"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.EspFrame.four.UIStroke
G2L["28"] = Instance.new("UIStroke", G2L["26"]);
G2L["28"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["28"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame.four.soundclick
G2L["29"] = Instance.new("LocalScript", G2L["26"]);
G2L["29"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.EspFrame.LocalScript
G2L["2a"] = Instance.new("LocalScript", G2L["17"]);



-- StarterGui.omarXwiet.sigma.EspFrame.first
G2L["2b"] = Instance.new("TextButton", G2L["17"]);
G2L["2b"]["TextWrapped"] = true;
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["TextSize"] = 14;
G2L["2b"]["TextScaled"] = true;
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["2b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2b"]["Size"] = UDim2.new(0.74851, 0, 0.14881, 0);
G2L["2b"]["Name"] = [[first]];
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Text"] = [[Esp Monster]];
G2L["2b"]["Position"] = UDim2.new(0.1236, 0, 0.0497, 0);


-- StarterGui.omarXwiet.sigma.EspFrame.first.UICorner
G2L["2c"] = Instance.new("UICorner", G2L["2b"]);
G2L["2c"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.EspFrame.first.UIStroke
G2L["2d"] = Instance.new("UIStroke", G2L["2b"]);
G2L["2d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2d"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.EspFrame.first.soundclick
G2L["2e"] = Instance.new("LocalScript", G2L["2b"]);
G2L["2e"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.drag localscript
G2L["2f"] = Instance.new("LocalScript", G2L["2"]);
G2L["2f"]["Name"] = [[drag localscript]];


-- StarterGui.omarXwiet.sigma.MiscFrame
G2L["30"] = Instance.new("Frame", G2L["2"]);
G2L["30"]["Visible"] = false;
G2L["30"]["Active"] = true;
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(53, 53, 53);
G2L["30"]["Size"] = UDim2.new(0.76082, 0, 1, 0);
G2L["30"]["Position"] = UDim2.new(0.23918, 0, 0, 0);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Name"] = [[MiscFrame]];
G2L["30"]["BackgroundTransparency"] = 0.2;


-- StarterGui.omarXwiet.sigma.MiscFrame.UIStroke
G2L["31"] = Instance.new("UIStroke", G2L["30"]);
G2L["31"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["31"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.UICorner
G2L["32"] = Instance.new("UICorner", G2L["30"]);
G2L["32"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.CameraText
G2L["33"] = Instance.new("TextLabel", G2L["30"]);
G2L["33"]["TextWrapped"] = true;
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["TextSize"] = 14;
G2L["33"]["TextScaled"] = true;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["33"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["33"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["BackgroundTransparency"] = 1;
G2L["33"]["Size"] = UDim2.new(0.39041, 0, 0.10598, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["33"]["Text"] = [[Camera]];
G2L["33"]["Name"] = [[CameraText]];
G2L["33"]["Position"] = UDim2.new(0, 0, 0.07318, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Selection
G2L["34"] = Instance.new("TextButton", G2L["30"]);
G2L["34"]["TextWrapped"] = true;
G2L["34"]["BorderSizePixel"] = 0;
G2L["34"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["34"]["TextSize"] = 14;
G2L["34"]["TextScaled"] = true;
G2L["34"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["34"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["34"]["Size"] = UDim2.new(0.55718, 0, 0.07316, 0);
G2L["34"]["Name"] = [[Selection]];
G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["34"]["Text"] = [[]];
G2L["34"]["Position"] = UDim2.new(0.41788, 0, 0.09841, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Selection.UIStroke
G2L["35"] = Instance.new("UIStroke", G2L["34"]);
G2L["35"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["35"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.Selection.UICorner
G2L["36"] = Instance.new("UICorner", G2L["34"]);
G2L["36"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.Selection.ImageLabel
G2L["37"] = Instance.new("ImageLabel", G2L["34"]);
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37"]["Image"] = [[http://www.roblox.com/asset/?id=18465928846]];
G2L["37"]["Size"] = UDim2.new(0.16489, 0, 0.96875, 0);
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["BackgroundTransparency"] = 1;
G2L["37"]["Position"] = UDim2.new(0.74862, 0, 0, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.1
G2L["38"] = Instance.new("TextButton", G2L["30"]);
G2L["38"]["TextWrapped"] = true;
G2L["38"]["BorderSizePixel"] = 0;
G2L["38"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38"]["TextSize"] = 14;
G2L["38"]["TextScaled"] = true;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["38"]["Size"] = UDim2.new(0.45937, 0, 0.07316, 0);
G2L["38"]["Name"] = [[1]];
G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38"]["Text"] = [[FirstPerson]];
G2L["38"]["Visible"] = false;
G2L["38"]["Position"] = UDim2.new(0.4653, 0, 0.17843, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.1.UIStroke
G2L["39"] = Instance.new("UIStroke", G2L["38"]);
G2L["39"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["39"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.1.UICorner
G2L["3a"] = Instance.new("UICorner", G2L["38"]);
G2L["3a"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.2
G2L["3b"] = Instance.new("TextButton", G2L["30"]);
G2L["3b"]["TextWrapped"] = true;
G2L["3b"]["BorderSizePixel"] = 0;
G2L["3b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["TextSize"] = 14;
G2L["3b"]["TextScaled"] = true;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["3b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3b"]["Selectable"] = false;
G2L["3b"]["Size"] = UDim2.new(0.45937, 0, 0.07316, 0);
G2L["3b"]["Name"] = [[2]];
G2L["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["Text"] = [[ThirdPerson]];
G2L["3b"]["Visible"] = false;
G2L["3b"]["Position"] = UDim2.new(0.4653, 0, 0.25918, 0);
G2L["3b"]["SelectionGroup"] = true;


-- StarterGui.omarXwiet.sigma.MiscFrame.2.UIStroke
G2L["3c"] = Instance.new("UIStroke", G2L["3b"]);
G2L["3c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["3c"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.2.UICorner
G2L["3d"] = Instance.new("UICorner", G2L["3b"]);
G2L["3d"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.LocalScript
G2L["3e"] = Instance.new("LocalScript", G2L["30"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright
G2L["3f"] = Instance.new("TextButton", G2L["30"]);
G2L["3f"]["TextWrapped"] = true;
G2L["3f"]["BorderSizePixel"] = 0;
G2L["3f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["TextSize"] = 14;
G2L["3f"]["TextScaled"] = true;
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3f"]["Size"] = UDim2.new(0.30916, 0, 0.09074, 0);
G2L["3f"]["Name"] = [[fullbright]];
G2L["3f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f"]["Text"] = [[Fullbright]];
G2L["3f"]["Position"] = UDim2.new(0.02075, 0, 0.38601, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright.UICorner
G2L["40"] = Instance.new("UICorner", G2L["3f"]);
G2L["40"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright.UIStroke
G2L["41"] = Instance.new("UIStroke", G2L["3f"]);
G2L["41"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["41"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright.soundclick
G2L["42"] = Instance.new("LocalScript", G2L["3f"]);
G2L["42"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright.LocalScript
G2L["43"] = Instance.new("LocalScript", G2L["3f"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk
G2L["44"] = Instance.new("TextButton", G2L["30"]);
G2L["44"]["TextWrapped"] = true;
G2L["44"]["BorderSizePixel"] = 0;
G2L["44"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44"]["TextSize"] = 14;
G2L["44"]["TextScaled"] = true;
G2L["44"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["44"]["Size"] = UDim2.new(0.30576, 0, 0.09074, 0);
G2L["44"]["Name"] = [[antiafk]];
G2L["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44"]["Text"] = [[AntiAfk]];
G2L["44"]["Position"] = UDim2.new(0.34972, 0, 0.38601, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk.UICorner
G2L["45"] = Instance.new("UICorner", G2L["44"]);
G2L["45"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk.UIStroke
G2L["46"] = Instance.new("UIStroke", G2L["44"]);
G2L["46"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["46"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk.soundclick
G2L["47"] = Instance.new("LocalScript", G2L["44"]);
G2L["47"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk.LocalScript
G2L["48"] = Instance.new("LocalScript", G2L["44"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow
G2L["49"] = Instance.new("TextButton", G2L["30"]);
G2L["49"]["TextWrapped"] = true;
G2L["49"]["BorderSizePixel"] = 0;
G2L["49"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49"]["TextSize"] = 14;
G2L["49"]["TextScaled"] = true;
G2L["49"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["49"]["Size"] = UDim2.new(0.29263, 0, 0.09074, 0);
G2L["49"]["Name"] = [[Textshow]];
G2L["49"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49"]["Text"] = [[Shows Day]];
G2L["49"]["Position"] = UDim2.new(0.68758, 0, 0.38601, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow.UICorner
G2L["4a"] = Instance.new("UICorner", G2L["49"]);
G2L["4a"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow.UIStroke
G2L["4b"] = Instance.new("UIStroke", G2L["49"]);
G2L["4b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["4b"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow.soundclick
G2L["4c"] = Instance.new("LocalScript", G2L["49"]);
G2L["4c"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow.LocalScript
G2L["4d"] = Instance.new("LocalScript", G2L["49"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["4e"] = Instance.new("TextLabel", G2L["30"]);
G2L["4e"]["TextWrapped"] = true;
G2L["4e"]["BorderSizePixel"] = 0;
G2L["4e"]["TextSize"] = 14;
G2L["4e"]["TextScaled"] = true;
G2L["4e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e"]["BackgroundTransparency"] = 1;
G2L["4e"]["Size"] = UDim2.new(0.29467, 0, 0.09124, 0);
G2L["4e"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["4e"]["Text"] = [[Shows what Day Top of screen]];
G2L["4e"]["Name"] = [[Tip]];
G2L["4e"]["Position"] = UDim2.new(0.68555, 0, 0.4919, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["4f"] = Instance.new("TextLabel", G2L["30"]);
G2L["4f"]["TextWrapped"] = true;
G2L["4f"]["BorderSizePixel"] = 0;
G2L["4f"]["TextSize"] = 14;
G2L["4f"]["TextScaled"] = true;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["BackgroundTransparency"] = 1;
G2L["4f"]["Size"] = UDim2.new(0.29467, 0, 0.09124, 0);
G2L["4f"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["4f"]["Text"] = [[Make u never get kick from afk]];
G2L["4f"]["Name"] = [[Tip]];
G2L["4f"]["Position"] = UDim2.new(0.35361, 0, 0.4919, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["50"] = Instance.new("TextLabel", G2L["30"]);
G2L["50"]["TextWrapped"] = true;
G2L["50"]["BorderSizePixel"] = 0;
G2L["50"]["TextSize"] = 14;
G2L["50"]["TextScaled"] = true;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["50"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50"]["BackgroundTransparency"] = 1;
G2L["50"]["Size"] = UDim2.new(0.29467, 0, 0.09124, 0);
G2L["50"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["50"]["Text"] = [[Make u see better]];
G2L["50"]["Name"] = [[Tip]];
G2L["50"]["Position"] = UDim2.new(0.03271, 0, 0.4833, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog
G2L["51"] = Instance.new("TextButton", G2L["30"]);
G2L["51"]["TextWrapped"] = true;
G2L["51"]["BorderSizePixel"] = 0;
G2L["51"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["TextSize"] = 14;
G2L["51"]["TextScaled"] = true;
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["51"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["51"]["Size"] = UDim2.new(0.30916, 0, 0.09074, 0);
G2L["51"]["Name"] = [[chatlog]];
G2L["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["Text"] = [[ChatLog]];
G2L["51"]["Position"] = UDim2.new(0.01778, 0, 0.60555, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog.UICorner
G2L["52"] = Instance.new("UICorner", G2L["51"]);
G2L["52"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog.UIStroke
G2L["53"] = Instance.new("UIStroke", G2L["51"]);
G2L["53"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["53"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog.soundclick
G2L["54"] = Instance.new("LocalScript", G2L["51"]);
G2L["54"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog.LocalScript
G2L["55"] = Instance.new("LocalScript", G2L["51"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["56"] = Instance.new("TextLabel", G2L["30"]);
G2L["56"]["TextWrapped"] = true;
G2L["56"]["BorderSizePixel"] = 0;
G2L["56"]["TextSize"] = 14;
G2L["56"]["TextScaled"] = true;
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["56"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["56"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56"]["BackgroundTransparency"] = 1;
G2L["56"]["Size"] = UDim2.new(0.29467, 0, 0.09124, 0);
G2L["56"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["56"]["Text"] = [[Make u see Chat]];
G2L["56"]["Name"] = [[Tip]];
G2L["56"]["Position"] = UDim2.new(0.03271, 0, 0.69487, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend
G2L["57"] = Instance.new("TextButton", G2L["30"]);
G2L["57"]["TextWrapped"] = true;
G2L["57"]["BorderSizePixel"] = 0;
G2L["57"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["TextSize"] = 14;
G2L["57"]["TextScaled"] = true;
G2L["57"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["57"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["57"]["Size"] = UDim2.new(0.30916, 0, 0.09074, 0);
G2L["57"]["Name"] = [[ReviveFriend]];
G2L["57"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["Text"] = [[Auto Revive Friend]];
G2L["57"]["Position"] = UDim2.new(0.35861, 0, 0.60555, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend.UICorner
G2L["58"] = Instance.new("UICorner", G2L["57"]);
G2L["58"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend.UIStroke
G2L["59"] = Instance.new("UIStroke", G2L["57"]);
G2L["59"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["59"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend.soundclick
G2L["5a"] = Instance.new("LocalScript", G2L["57"]);
G2L["5a"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend.LocalScript
G2L["5b"] = Instance.new("LocalScript", G2L["57"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["5c"] = Instance.new("TextLabel", G2L["30"]);
G2L["5c"]["TextWrapped"] = true;
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["TextSize"] = 14;
G2L["5c"]["TextScaled"] = true;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c"]["BackgroundTransparency"] = 1;
G2L["5c"]["Size"] = UDim2.new(0.3332, 0, 0.09124, 0);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["5c"]["Text"] = [[Need Bandge]];
G2L["5c"]["Name"] = [[Tip]];
G2L["5c"]["Position"] = UDim2.new(0.35872, 0, 0.69593, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.antilag
G2L["5d"] = Instance.new("TextButton", G2L["30"]);
G2L["5d"]["TextWrapped"] = true;
G2L["5d"]["BorderSizePixel"] = 0;
G2L["5d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d"]["TextSize"] = 14;
G2L["5d"]["TextScaled"] = true;
G2L["5d"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["5d"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5d"]["Size"] = UDim2.new(0.28671, 0, 0.09074, 0);
G2L["5d"]["Name"] = [[antilag]];
G2L["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d"]["Text"] = [[Fps Booster]];
G2L["5d"]["Position"] = UDim2.new(0.69351, 0, 0.60555, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.antilag.UICorner
G2L["5e"] = Instance.new("UICorner", G2L["5d"]);
G2L["5e"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.antilag.UIStroke
G2L["5f"] = Instance.new("UIStroke", G2L["5d"]);
G2L["5f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["5f"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.antilag.soundclick
G2L["60"] = Instance.new("LocalScript", G2L["5d"]);
G2L["60"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.antilag.LocalScript
G2L["61"] = Instance.new("LocalScript", G2L["5d"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["62"] = Instance.new("TextLabel", G2L["30"]);
G2L["62"]["TextWrapped"] = true;
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["TextSize"] = 14;
G2L["62"]["TextScaled"] = true;
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["62"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["BackgroundTransparency"] = 1;
G2L["62"]["Size"] = UDim2.new(0.28737, 0, 0.06601, 0);
G2L["62"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["62"]["Text"] = [[Low graphic]];
G2L["62"]["Name"] = [[Tip]];
G2L["62"]["Position"] = UDim2.new(0.69065, 0, 0.70602, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix
G2L["63"] = Instance.new("TextButton", G2L["30"]);
G2L["63"]["TextWrapped"] = true;
G2L["63"]["BorderSizePixel"] = 0;
G2L["63"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63"]["TextSize"] = 14;
G2L["63"]["TextScaled"] = true;
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["63"]["Size"] = UDim2.new(0.37523, 0, 0.09074, 0);
G2L["63"]["Name"] = [[MouseFix]];
G2L["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63"]["Text"] = [[MouseFix (PC ONLY)]];
G2L["63"]["Position"] = UDim2.new(0.01518, 0, 0.79305, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix.UICorner
G2L["64"] = Instance.new("UICorner", G2L["63"]);
G2L["64"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix.UIStroke
G2L["65"] = Instance.new("UIStroke", G2L["63"]);
G2L["65"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["65"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix.soundclick
G2L["66"] = Instance.new("LocalScript", G2L["63"]);
G2L["66"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix.LocalScript
G2L["67"] = Instance.new("LocalScript", G2L["63"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["68"] = Instance.new("TextLabel", G2L["30"]);
G2L["68"]["TextWrapped"] = true;
G2L["68"]["BorderSizePixel"] = 0;
G2L["68"]["TextSize"] = 14;
G2L["68"]["TextScaled"] = true;
G2L["68"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["68"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["68"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["68"]["BackgroundTransparency"] = 1;
G2L["68"]["Size"] = UDim2.new(0.3603, 0, 0.09124, 0);
G2L["68"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["68"]["Text"] = [[Fix PC game Mouse]];
G2L["68"]["Name"] = [[Tip]];
G2L["68"]["Position"] = UDim2.new(0.01233, 0, 0.88082, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid
G2L["69"] = Instance.new("TextButton", G2L["30"]);
G2L["69"]["TextWrapped"] = true;
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69"]["TextSize"] = 14;
G2L["69"]["TextScaled"] = true;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59);
G2L["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["69"]["Size"] = UDim2.new(0.37523, 0, 0.09074, 0);
G2L["69"]["Name"] = [[Bulid]];
G2L["69"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69"]["Text"] = [[Bulids Around House]];
G2L["69"]["Position"] = UDim2.new(0.43981, 0, 0.79305, 0);


-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid.UICorner
G2L["6a"] = Instance.new("UICorner", G2L["69"]);
G2L["6a"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid.UIStroke
G2L["6b"] = Instance.new("UIStroke", G2L["69"]);
G2L["6b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["6b"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid.soundclick
G2L["6c"] = Instance.new("LocalScript", G2L["69"]);
G2L["6c"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid.LocalScript
G2L["6d"] = Instance.new("LocalScript", G2L["69"]);



-- StarterGui.omarXwiet.sigma.MiscFrame.Tip
G2L["6e"] = Instance.new("TextLabel", G2L["30"]);
G2L["6e"]["TextWrapped"] = true;
G2L["6e"]["BorderSizePixel"] = 0;
G2L["6e"]["TextSize"] = 14;
G2L["6e"]["TextScaled"] = true;
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e"]["BackgroundTransparency"] = 1;
G2L["6e"]["Size"] = UDim2.new(0.3603, 0, 0.09124, 0);
G2L["6e"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["6e"]["Text"] = [[Need 145 Wood]];
G2L["6e"]["Name"] = [[Tip]];
G2L["6e"]["Position"] = UDim2.new(0.44503, 0, 0.88334, 0);


-- StarterGui.omarXwiet.sigma.configframe
G2L["6f"] = Instance.new("Frame", G2L["2"]);
G2L["6f"]["Visible"] = false;
G2L["6f"]["Active"] = true;
G2L["6f"]["BorderSizePixel"] = 0;
G2L["6f"]["BackgroundColor3"] = Color3.fromRGB(53, 53, 53);
G2L["6f"]["Size"] = UDim2.new(0.76082, 0, 1, 0);
G2L["6f"]["Position"] = UDim2.new(0.23918, 0, 0, 0);
G2L["6f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f"]["Name"] = [[configframe]];
G2L["6f"]["BackgroundTransparency"] = 0.2;


-- StarterGui.omarXwiet.sigma.configframe.UIStroke
G2L["70"] = Instance.new("UIStroke", G2L["6f"]);
G2L["70"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["70"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.configframe.UICorner
G2L["71"] = Instance.new("UICorner", G2L["6f"]);
G2L["71"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.configframe.first
G2L["72"] = Instance.new("TextButton", G2L["6f"]);
G2L["72"]["TextWrapped"] = true;
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["TextSize"] = 14;
G2L["72"]["TextScaled"] = true;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(182, 182, 182);
G2L["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["72"]["Size"] = UDim2.new(0.74851, 0, 0.12358, 0);
G2L["72"]["Name"] = [[first]];
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Text"] = [[Rapid Fire]];
G2L["72"]["Position"] = UDim2.new(0.1236, 0, 0.05223, 0);


-- StarterGui.omarXwiet.sigma.configframe.first.UICorner
G2L["73"] = Instance.new("UICorner", G2L["72"]);
G2L["73"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.configframe.first.UIStroke
G2L["74"] = Instance.new("UIStroke", G2L["72"]);
G2L["74"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["74"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.configframe.first.soundclick
G2L["75"] = Instance.new("LocalScript", G2L["72"]);
G2L["75"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.configframe.first.LocalScript
G2L["76"] = Instance.new("LocalScript", G2L["72"]);



-- StarterGui.omarXwiet.sigma.configframe.second
G2L["77"] = Instance.new("TextButton", G2L["6f"]);
G2L["77"]["TextWrapped"] = true;
G2L["77"]["BorderSizePixel"] = 0;
G2L["77"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["77"]["TextSize"] = 14;
G2L["77"]["TextScaled"] = true;
G2L["77"]["BackgroundColor3"] = Color3.fromRGB(182, 182, 182);
G2L["77"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["77"]["Size"] = UDim2.new(0.74851, 0, 0.12358, 0);
G2L["77"]["Name"] = [[second]];
G2L["77"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["77"]["Text"] = [[Auto Kill Animals/Farm Leather]];
G2L["77"]["Position"] = UDim2.new(0.1236, 0, 0.2213, 0);


-- StarterGui.omarXwiet.sigma.configframe.second.UICorner
G2L["78"] = Instance.new("UICorner", G2L["77"]);
G2L["78"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.configframe.second.UIStroke
G2L["79"] = Instance.new("UIStroke", G2L["77"]);
G2L["79"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["79"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.configframe.second.soundclick
G2L["7a"] = Instance.new("LocalScript", G2L["77"]);
G2L["7a"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.configframe.second.LocalScript
G2L["7b"] = Instance.new("LocalScript", G2L["77"]);



-- StarterGui.omarXwiet.sigma.configframe.third
G2L["7c"] = Instance.new("TextButton", G2L["6f"]);
G2L["7c"]["TextWrapped"] = true;
G2L["7c"]["BorderSizePixel"] = 0;
G2L["7c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7c"]["TextSize"] = 14;
G2L["7c"]["TextScaled"] = true;
G2L["7c"]["BackgroundColor3"] = Color3.fromRGB(182, 182, 182);
G2L["7c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7c"]["Size"] = UDim2.new(0.74851, 0, 0.12358, 0);
G2L["7c"]["Name"] = [[third]];
G2L["7c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7c"]["Text"] = [[Auto Kill Monster]];
G2L["7c"]["Position"] = UDim2.new(0.1236, 0, 0.38784, 0);


-- StarterGui.omarXwiet.sigma.configframe.third.UICorner
G2L["7d"] = Instance.new("UICorner", G2L["7c"]);
G2L["7d"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.configframe.third.UIStroke
G2L["7e"] = Instance.new("UIStroke", G2L["7c"]);
G2L["7e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7e"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.configframe.third.soundclick
G2L["7f"] = Instance.new("LocalScript", G2L["7c"]);
G2L["7f"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.configframe.third.LocalScript
G2L["80"] = Instance.new("LocalScript", G2L["7c"]);



-- StarterGui.omarXwiet.sigma.configframe.four
G2L["81"] = Instance.new("TextButton", G2L["6f"]);
G2L["81"]["TextWrapped"] = true;
G2L["81"]["BorderSizePixel"] = 0;
G2L["81"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["TextSize"] = 14;
G2L["81"]["TextScaled"] = true;
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(182, 182, 182);
G2L["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["81"]["Size"] = UDim2.new(0.74851, 0, 0.12358, 0);
G2L["81"]["Name"] = [[four]];
G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["Text"] = [[Instant Tree Chop]];
G2L["81"]["Position"] = UDim2.new(0.1236, 0, 0.54682, 0);


-- StarterGui.omarXwiet.sigma.configframe.four.UICorner
G2L["82"] = Instance.new("UICorner", G2L["81"]);
G2L["82"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.configframe.four.UIStroke
G2L["83"] = Instance.new("UIStroke", G2L["81"]);
G2L["83"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["83"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.configframe.four.soundclick
G2L["84"] = Instance.new("LocalScript", G2L["81"]);
G2L["84"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.configframe.four.LocalScript
G2L["85"] = Instance.new("LocalScript", G2L["81"]);



-- StarterGui.omarXwiet.sigma.configframe.KEY
G2L["86"] = Instance.new("TextLabel", G2L["6f"]);
G2L["86"]["TextWrapped"] = true;
G2L["86"]["BorderSizePixel"] = 0;
G2L["86"]["TextSize"] = 14;
G2L["86"]["TextScaled"] = true;
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["86"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["86"]["BackgroundTransparency"] = 1;
G2L["86"]["Size"] = UDim2.new(0.35812, 0, 0.06736, 0);
G2L["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["Text"] = [[OFF]];
G2L["86"]["Name"] = [[KEY]];
G2L["86"]["Position"] = UDim2.new(0.31938, 0, 0.93138, 0);


-- StarterGui.omarXwiet.sigma.configframe.five
G2L["87"] = Instance.new("TextButton", G2L["6f"]);
G2L["87"]["TextWrapped"] = true;
G2L["87"]["BorderSizePixel"] = 0;
G2L["87"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["TextSize"] = 14;
G2L["87"]["TextScaled"] = true;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(182, 182, 182);
G2L["87"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["87"]["Size"] = UDim2.new(0.74851, 0, 0.12358, 0);
G2L["87"]["Name"] = [[five]];
G2L["87"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["Text"] = [[Auto Eat When Hungry is low]];
G2L["87"]["Position"] = UDim2.new(0.1236, 0, 0.7067, 0);


-- StarterGui.omarXwiet.sigma.configframe.five.UICorner
G2L["88"] = Instance.new("UICorner", G2L["87"]);
G2L["88"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.configframe.five.UIStroke
G2L["89"] = Instance.new("UIStroke", G2L["87"]);
G2L["89"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["89"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.configframe.five.soundclick
G2L["8a"] = Instance.new("LocalScript", G2L["87"]);
G2L["8a"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.configframe.five.LocalScript
G2L["8b"] = Instance.new("LocalScript", G2L["87"]);



-- StarterGui.omarXwiet.sigma.Farm
G2L["8c"] = Instance.new("Frame", G2L["2"]);
G2L["8c"]["Visible"] = false;
G2L["8c"]["Active"] = true;
G2L["8c"]["BorderSizePixel"] = 0;
G2L["8c"]["BackgroundColor3"] = Color3.fromRGB(53, 53, 53);
G2L["8c"]["Size"] = UDim2.new(0.76082, 0, 1, 0);
G2L["8c"]["Position"] = UDim2.new(0.23918, 0, 0, 0);
G2L["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8c"]["Name"] = [[Farm]];
G2L["8c"]["BackgroundTransparency"] = 0.2;


-- StarterGui.omarXwiet.sigma.Farm.UIStroke
G2L["8d"] = Instance.new("UIStroke", G2L["8c"]);
G2L["8d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["8d"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.UICorner
G2L["8e"] = Instance.new("UICorner", G2L["8c"]);
G2L["8e"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.FarmText
G2L["8f"] = Instance.new("TextLabel", G2L["8c"]);
G2L["8f"]["TextWrapped"] = true;
G2L["8f"]["BorderSizePixel"] = 0;
G2L["8f"]["TextSize"] = 14;
G2L["8f"]["TextScaled"] = true;
G2L["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8f"]["BackgroundTransparency"] = 1;
G2L["8f"]["Size"] = UDim2.new(0.41788, 0, 0.10598, 0);
G2L["8f"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["8f"]["Text"] = [[Farm]];
G2L["8f"]["Name"] = [[FarmText]];
G2L["8f"]["Position"] = UDim2.new(-0.02667, 0, 0.07089, 0);


-- StarterGui.omarXwiet.sigma.Farm.Selection
G2L["90"] = Instance.new("TextButton", G2L["8c"]);
G2L["90"]["TextWrapped"] = true;
G2L["90"]["BorderSizePixel"] = 0;
G2L["90"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["90"]["TextSize"] = 14;
G2L["90"]["TextScaled"] = true;
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["90"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["90"]["Size"] = UDim2.new(0.47123, 0, 0.07316, 0);
G2L["90"]["Name"] = [[Selection]];
G2L["90"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["90"]["Text"] = [[]];
G2L["90"]["Position"] = UDim2.new(0.52754, 0, 0.09013, 0);


-- StarterGui.omarXwiet.sigma.Farm.Selection.UIStroke
G2L["91"] = Instance.new("UIStroke", G2L["90"]);
G2L["91"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["91"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.Selection.UICorner
G2L["92"] = Instance.new("UICorner", G2L["90"]);
G2L["92"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.Selection.ImageLabel
G2L["93"] = Instance.new("ImageLabel", G2L["90"]);
G2L["93"]["BorderSizePixel"] = 0;
G2L["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["93"]["Image"] = [[http://www.roblox.com/asset/?id=18465928846]];
G2L["93"]["Size"] = UDim2.new(0.16489, 0, 0.96875, 0);
G2L["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["93"]["BackgroundTransparency"] = 1;
G2L["93"]["Position"] = UDim2.new(0.74862, 0, 0, 0);


-- StarterGui.omarXwiet.sigma.Farm.1
G2L["94"] = Instance.new("TextButton", G2L["8c"]);
G2L["94"]["TextWrapped"] = true;
G2L["94"]["BorderSizePixel"] = 0;
G2L["94"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["94"]["TextSize"] = 14;
G2L["94"]["TextScaled"] = true;
G2L["94"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["94"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["94"]["Size"] = UDim2.new(0.45937, 0, 0.07316, 0);
G2L["94"]["Name"] = [[1]];
G2L["94"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["94"]["Text"] = [[Scrapts]];
G2L["94"]["Visible"] = false;
G2L["94"]["Position"] = UDim2.new(0.52754, 0, 0.17843, 0);


-- StarterGui.omarXwiet.sigma.Farm.1.UIStroke
G2L["95"] = Instance.new("UIStroke", G2L["94"]);
G2L["95"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["95"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.1.UICorner
G2L["96"] = Instance.new("UICorner", G2L["94"]);
G2L["96"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.2
G2L["97"] = Instance.new("TextButton", G2L["8c"]);
G2L["97"]["TextWrapped"] = true;
G2L["97"]["BorderSizePixel"] = 0;
G2L["97"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["97"]["TextSize"] = 14;
G2L["97"]["TextScaled"] = true;
G2L["97"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["97"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["97"]["Size"] = UDim2.new(0.45937, 0, 0.07316, 0);
G2L["97"]["Name"] = [[2]];
G2L["97"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["97"]["Text"] = [[Wood]];
G2L["97"]["Visible"] = false;
G2L["97"]["Position"] = UDim2.new(0.52754, 0, 0.27518, 0);


-- StarterGui.omarXwiet.sigma.Farm.2.UIStroke
G2L["98"] = Instance.new("UIStroke", G2L["97"]);
G2L["98"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["98"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.2.UICorner
G2L["99"] = Instance.new("UICorner", G2L["97"]);
G2L["99"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.on/off
G2L["9a"] = Instance.new("TextButton", G2L["8c"]);
G2L["9a"]["TextWrapped"] = true;
G2L["9a"]["BorderSizePixel"] = 0;
G2L["9a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9a"]["TextSize"] = 14;
G2L["9a"]["TextScaled"] = true;
G2L["9a"]["BackgroundColor3"] = Color3.fromRGB(255, 58, 61);
G2L["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9a"]["Size"] = UDim2.new(0.12753, 0, 0.0757, 0);
G2L["9a"]["Name"] = [[on/off]];
G2L["9a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9a"]["Text"] = [[Off]];
G2L["9a"]["Position"] = UDim2.new(0.36548, 0, 0.09011, 0);


-- StarterGui.omarXwiet.sigma.Farm.on/off.UICorner
G2L["9b"] = Instance.new("UICorner", G2L["9a"]);
G2L["9b"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.on/off.UIStroke
G2L["9c"] = Instance.new("UIStroke", G2L["9a"]);
G2L["9c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["9c"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.3
G2L["9d"] = Instance.new("TextButton", G2L["8c"]);
G2L["9d"]["TextWrapped"] = true;
G2L["9d"]["BorderSizePixel"] = 0;
G2L["9d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9d"]["TextSize"] = 14;
G2L["9d"]["TextScaled"] = true;
G2L["9d"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["9d"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9d"]["Size"] = UDim2.new(0.45937, 0, 0.07316, 0);
G2L["9d"]["Name"] = [[3]];
G2L["9d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9d"]["Text"] = [[berry]];
G2L["9d"]["Visible"] = false;
G2L["9d"]["Position"] = UDim2.new(0.52754, 0, 0.36855, 0);


-- StarterGui.omarXwiet.sigma.Farm.3.UIStroke
G2L["9e"] = Instance.new("UIStroke", G2L["9d"]);
G2L["9e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["9e"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.3.UICorner
G2L["9f"] = Instance.new("UICorner", G2L["9d"]);
G2L["9f"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.4
G2L["a0"] = Instance.new("TextButton", G2L["8c"]);
G2L["a0"]["TextWrapped"] = true;
G2L["a0"]["BorderSizePixel"] = 0;
G2L["a0"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a0"]["TextSize"] = 14;
G2L["a0"]["TextScaled"] = true;
G2L["a0"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
G2L["a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a0"]["Size"] = UDim2.new(0.45937, 0, 0.07316, 0);
G2L["a0"]["Name"] = [[4]];
G2L["a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a0"]["Text"] = [[Cabbage]];
G2L["a0"]["Visible"] = false;
G2L["a0"]["Position"] = UDim2.new(0.53347, 0, 0.46192, 0);


-- StarterGui.omarXwiet.sigma.Farm.4.UIStroke
G2L["a1"] = Instance.new("UIStroke", G2L["a0"]);
G2L["a1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["a1"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.Farm.4.UICorner
G2L["a2"] = Instance.new("UICorner", G2L["a0"]);
G2L["a2"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.Farm.Tip
G2L["a3"] = Instance.new("TextLabel", G2L["8c"]);
G2L["a3"]["TextWrapped"] = true;
G2L["a3"]["BorderSizePixel"] = 0;
G2L["a3"]["TextSize"] = 14;
G2L["a3"]["TextScaled"] = true;
G2L["a3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a3"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a3"]["BackgroundTransparency"] = 1;
G2L["a3"]["Size"] = UDim2.new(0.28452, 0, 0.10598, 0);
G2L["a3"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["a3"]["Text"] = [[Scrapts]];
G2L["a3"]["Name"] = [[Tip]];
G2L["a3"]["Position"] = UDim2.new(-0.00296, 0, 0.86073, 0);


-- StarterGui.omarXwiet.sigma.Farm.scrapts
G2L["a4"] = Instance.new("ImageLabel", G2L["8c"]);
G2L["a4"]["BorderSizePixel"] = 0;
G2L["a4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a4"]["Image"] = [[rbxassetid://103842016655392]];
G2L["a4"]["Size"] = UDim2.new(0.271, 0, 0.184, 0);
G2L["a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a4"]["Name"] = [[scrapts]];
G2L["a4"]["Position"] = UDim2.new(0.0298, 0, 0.67648, 0);


-- StarterGui.omarXwiet.sigma.Farm.Wood
G2L["a5"] = Instance.new("ImageLabel", G2L["8c"]);
G2L["a5"]["BorderSizePixel"] = 0;
G2L["a5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a5"]["Image"] = [[rbxassetid://89809532672970]];
G2L["a5"]["Size"] = UDim2.new(0.271, 0, 0.184, 0);
G2L["a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a5"]["Name"] = [[Wood]];
G2L["a5"]["Position"] = UDim2.new(0.30246, 0, 0.679, 0);


-- StarterGui.omarXwiet.sigma.Farm.Tip
G2L["a6"] = Instance.new("TextLabel", G2L["8c"]);
G2L["a6"]["TextWrapped"] = true;
G2L["a6"]["BorderSizePixel"] = 0;
G2L["a6"]["TextSize"] = 14;
G2L["a6"]["TextScaled"] = true;
G2L["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a6"]["BackgroundTransparency"] = 1;
G2L["a6"]["Size"] = UDim2.new(0.28452, 0, 0.10598, 0);
G2L["a6"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["a6"]["Text"] = [[Wood]];
G2L["a6"]["Name"] = [[Tip]];
G2L["a6"]["Position"] = UDim2.new(0.29341, 0, 0.86073, 0);


-- StarterGui.omarXwiet.sigma.Farm.Cabbage
G2L["a7"] = Instance.new("ImageLabel", G2L["8c"]);
G2L["a7"]["BorderSizePixel"] = 0;
G2L["a7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a7"]["Image"] = [[rbxassetid://77438533440003]];
G2L["a7"]["Size"] = UDim2.new(0.271, 0, 0.18652, 0);
G2L["a7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a7"]["Name"] = [[Cabbage]];
G2L["a7"]["Position"] = UDim2.new(0.57512, 0, 0.67648, 0);


-- StarterGui.omarXwiet.sigma.Farm.Tip
G2L["a8"] = Instance.new("TextLabel", G2L["8c"]);
G2L["a8"]["TextWrapped"] = true;
G2L["a8"]["BorderSizePixel"] = 0;
G2L["a8"]["TextSize"] = 14;
G2L["a8"]["TextScaled"] = true;
G2L["a8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a8"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a8"]["BackgroundTransparency"] = 1;
G2L["a8"]["Size"] = UDim2.new(0.28452, 0, 0.10598, 0);
G2L["a8"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["a8"]["Text"] = [[Cabbage]];
G2L["a8"]["Name"] = [[Tip]];
G2L["a8"]["Position"] = UDim2.new(0.58385, 0, 0.86073, 0);


-- StarterGui.omarXwiet.sigma.Farm.Berry
G2L["a9"] = Instance.new("ImageLabel", G2L["8c"]);
G2L["a9"]["BorderSizePixel"] = 0;
G2L["a9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a9"]["Image"] = [[rbxassetid://73377864887134]];
G2L["a9"]["Size"] = UDim2.new(0.271, 0, 0.184, 0);
G2L["a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a9"]["Name"] = [[Berry]];
G2L["a9"]["Position"] = UDim2.new(0.02091, 0, 0.39385, 0);


-- StarterGui.omarXwiet.sigma.Farm.Tip
G2L["aa"] = Instance.new("TextLabel", G2L["8c"]);
G2L["aa"]["TextWrapped"] = true;
G2L["aa"]["BorderSizePixel"] = 0;
G2L["aa"]["TextSize"] = 14;
G2L["aa"]["TextScaled"] = true;
G2L["aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["aa"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["aa"]["BackgroundTransparency"] = 1;
G2L["aa"]["Size"] = UDim2.new(0.28452, 0, 0.10598, 0);
G2L["aa"]["BorderColor3"] = Color3.fromRGB(30, 30, 30);
G2L["aa"]["Text"] = [[Berry]];
G2L["aa"]["Name"] = [[Tip]];
G2L["aa"]["Position"] = UDim2.new(0.01185, 0, 0.56801, 0);


-- StarterGui.omarXwiet.sigma.Farm.LocalScript
G2L["ab"] = Instance.new("LocalScript", G2L["8c"]);



-- StarterGui.omarXwiet.sigma.KeyFrame
G2L["ac"] = Instance.new("Frame", G2L["2"]);
G2L["ac"]["Visible"] = false;
G2L["ac"]["Active"] = true;
G2L["ac"]["BorderSizePixel"] = 0;
G2L["ac"]["BackgroundColor3"] = Color3.fromRGB(53, 53, 53);
G2L["ac"]["Size"] = UDim2.new(0.76082, 0, 1, 0);
G2L["ac"]["Position"] = UDim2.new(0.23918, 0, 0, 0);
G2L["ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ac"]["Name"] = [[KeyFrame]];
G2L["ac"]["BackgroundTransparency"] = 0.2;


-- StarterGui.omarXwiet.sigma.KeyFrame.UIStroke
G2L["ad"] = Instance.new("UIStroke", G2L["ac"]);
G2L["ad"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["ad"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.KeyFrame.UICorner
G2L["ae"] = Instance.new("UICorner", G2L["ac"]);
G2L["ae"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe
G2L["af"] = Instance.new("Frame", G2L["ac"]);
G2L["af"]["BorderSizePixel"] = 0;
G2L["af"]["BackgroundColor3"] = Color3.fromRGB(214, 214, 214);
G2L["af"]["Size"] = UDim2.new(0.84589, 0, 0.16907, 0);
G2L["af"]["Position"] = UDim2.new(0.01778, 0, 0.05047, 0);
G2L["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["af"]["Name"] = [[Keyframe]];


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.UIStroke
G2L["b0"] = Instance.new("UIStroke", G2L["af"]);
G2L["b0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["b0"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.UICorner
G2L["b1"] = Instance.new("UICorner", G2L["af"]);
G2L["b1"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.keyrtext
G2L["b2"] = Instance.new("TextLabel", G2L["af"]);
G2L["b2"]["TextWrapped"] = true;
G2L["b2"]["BorderSizePixel"] = 0;
G2L["b2"]["TextSize"] = 14;
G2L["b2"]["TextScaled"] = true;
G2L["b2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b2"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b2"]["BackgroundTransparency"] = 1;
G2L["b2"]["Size"] = UDim2.new(0.35692, 0, 0.74627, 0);
G2L["b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b2"]["Text"] = [[Key]];
G2L["b2"]["Name"] = [[keyrtext]];
G2L["b2"]["Position"] = UDim2.new(-0.01846, 0, 0.1194, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit
G2L["b3"] = Instance.new("TextButton", G2L["af"]);
G2L["b3"]["TextWrapped"] = true;
G2L["b3"]["BorderSizePixel"] = 0;
G2L["b3"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b3"]["TextSize"] = 14;
G2L["b3"]["TextScaled"] = true;
G2L["b3"]["BackgroundColor3"] = Color3.fromRGB(137, 137, 137);
G2L["b3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b3"]["Size"] = UDim2.new(0.17716, 0, 0.73927, 0);
G2L["b3"]["Name"] = [[submit]];
G2L["b3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b3"]["Text"] = [[submit]];
G2L["b3"]["Position"] = UDim2.new(0.79643, 0, 0.14925, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit.UICorner
G2L["b4"] = Instance.new("UICorner", G2L["b3"]);
G2L["b4"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit.UIStroke
G2L["b5"] = Instance.new("UIStroke", G2L["b3"]);
G2L["b5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["b5"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit.soundclick
G2L["b6"] = Instance.new("LocalScript", G2L["b3"]);
G2L["b6"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit.key
G2L["b7"] = Instance.new("LocalScript", G2L["b3"]);
G2L["b7"]["Name"] = [[key]];


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.Putkeyyhere
G2L["b8"] = Instance.new("TextBox", G2L["af"]);
G2L["b8"]["Name"] = [[Putkeyyhere]];
G2L["b8"]["BorderSizePixel"] = 0;
G2L["b8"]["TextWrapped"] = true;
G2L["b8"]["TextSize"] = 14;
G2L["b8"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b8"]["TextScaled"] = true;
G2L["b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b8"]["Size"] = UDim2.new(0.47077, 0, 0.62687, 0);
G2L["b8"]["Position"] = UDim2.new(0.29309, 0, 0.1827, 0);
G2L["b8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b8"]["Text"] = [[]];


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.Putkeyyhere.UIStroke
G2L["b9"] = Instance.new("UIStroke", G2L["b8"]);
G2L["b9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["b9"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.Putkeyyhere.UICorner
G2L["ba"] = Instance.new("UICorner", G2L["b8"]);
G2L["ba"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.KeyFrame.getkey
G2L["bb"] = Instance.new("TextLabel", G2L["ac"]);
G2L["bb"]["TextWrapped"] = true;
G2L["bb"]["BorderSizePixel"] = 0;
G2L["bb"]["TextSize"] = 14;
G2L["bb"]["TextScaled"] = true;
G2L["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["BackgroundTransparency"] = 1;
G2L["bb"]["Size"] = UDim2.new(0.96173, 0, 0.12617, 0);
G2L["bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bb"]["Text"] = [[Get Key from discord]];
G2L["bb"]["Name"] = [[getkey]];
G2L["bb"]["Position"] = UDim2.new(0.01778, 0, 0.35156, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Link
G2L["bc"] = Instance.new("TextLabel", G2L["ac"]);
G2L["bc"]["TextWrapped"] = true;
G2L["bc"]["BorderSizePixel"] = 0;
G2L["bc"]["TextSize"] = 14;
G2L["bc"]["TextScaled"] = true;
G2L["bc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bc"]["BackgroundTransparency"] = 1;
G2L["bc"]["Size"] = UDim2.new(0.80019, 0, 0.11608, 0);
G2L["bc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bc"]["Text"] = [[https://discord.gg/HJSfaPTDCX]];
G2L["bc"]["Name"] = [[Link]];
G2L["bc"]["Position"] = UDim2.new(0.00217, 0, 0.55596, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy
G2L["bd"] = Instance.new("TextButton", G2L["ac"]);
G2L["bd"]["TextWrapped"] = true;
G2L["bd"]["BorderSizePixel"] = 0;
G2L["bd"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bd"]["TextSize"] = 14;
G2L["bd"]["TextScaled"] = true;
G2L["bd"]["BackgroundColor3"] = Color3.fromRGB(137, 137, 137);
G2L["bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bd"]["Size"] = UDim2.new(0.17716, 0, 0.12794, 0);
G2L["bd"]["Name"] = [[Copy]];
G2L["bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bd"]["Text"] = [[COPY]];
G2L["bd"]["Position"] = UDim2.new(0.80235, 0, 0.55619, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.UICorner
G2L["be"] = Instance.new("UICorner", G2L["bd"]);
G2L["be"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.UIStroke
G2L["bf"] = Instance.new("UIStroke", G2L["bd"]);
G2L["bf"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["bf"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.LocalScript
G2L["c0"] = Instance.new("LocalScript", G2L["bd"]);



-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.soundclick
G2L["c1"] = Instance.new("LocalScript", G2L["bd"]);
G2L["c1"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.sigma.KeyFrame.Credits
G2L["c2"] = Instance.new("TextLabel", G2L["ac"]);
G2L["c2"]["TextWrapped"] = true;
G2L["c2"]["BorderSizePixel"] = 0;
G2L["c2"]["TextSize"] = 14;
G2L["c2"]["TextScaled"] = true;
G2L["c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c2"]["BackgroundTransparency"] = 1;
G2L["c2"]["Size"] = UDim2.new(0.96173, 0, 0.12617, 0);
G2L["c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c2"]["Text"] = [[Credits omar And Wiet]];
G2L["c2"]["Name"] = [[Credits]];
G2L["c2"]["Position"] = UDim2.new(0.01778, 0, 0.72954, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.subto
G2L["c3"] = Instance.new("TextLabel", G2L["ac"]);
G2L["c3"]["TextWrapped"] = true;
G2L["c3"]["BorderSizePixel"] = 0;
G2L["c3"]["TextSize"] = 14;
G2L["c3"]["TextScaled"] = true;
G2L["c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c3"]["BackgroundTransparency"] = 1;
G2L["c3"]["Size"] = UDim2.new(0.67369, 0, 0.12617, 0);
G2L["c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c3"]["Text"] = [[Channel: omargamer8198]];
G2L["c3"]["Name"] = [[subto]];
G2L["c3"]["Position"] = UDim2.new(0.01778, 0, 0.85454, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy
G2L["c4"] = Instance.new("TextButton", G2L["ac"]);
G2L["c4"]["TextWrapped"] = true;
G2L["c4"]["BorderSizePixel"] = 0;
G2L["c4"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c4"]["TextSize"] = 14;
G2L["c4"]["TextScaled"] = true;
G2L["c4"]["BackgroundColor3"] = Color3.fromRGB(137, 137, 137);
G2L["c4"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c4"]["Size"] = UDim2.new(0.17716, 0, 0.12794, 0);
G2L["c4"]["Name"] = [[Copy]];
G2L["c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c4"]["Text"] = [[COPY]];
G2L["c4"]["Position"] = UDim2.new(0.71344, 0, 0.85083, 0);


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.UICorner
G2L["c5"] = Instance.new("UICorner", G2L["c4"]);
G2L["c5"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.UIStroke
G2L["c6"] = Instance.new("UIStroke", G2L["c4"]);
G2L["c6"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["c6"]["Thickness"] = 3;


-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.LocalScript
G2L["c7"] = Instance.new("LocalScript", G2L["c4"]);



-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.soundclick
G2L["c8"] = Instance.new("LocalScript", G2L["c4"]);
G2L["c8"]["Name"] = [[soundclick]];


-- StarterGui.omarXwiet.Toggle
G2L["c9"] = Instance.new("TextButton", G2L["1"]);
G2L["c9"]["TextWrapped"] = true;
G2L["c9"]["BorderSizePixel"] = 0;
G2L["c9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c9"]["TextSize"] = 14;
G2L["c9"]["TextScaled"] = true;
G2L["c9"]["BackgroundColor3"] = Color3.fromRGB(69, 69, 69);
G2L["c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c9"]["Size"] = UDim2.new(0.04464, 0, 0.0641, 0);
G2L["c9"]["Name"] = [[Toggle]];
G2L["c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c9"]["Text"] = [[Hide]];
G2L["c9"]["Position"] = UDim2.new(0.11384, 0, 0.02595, 0);


-- StarterGui.omarXwiet.Toggle.UICorner
G2L["ca"] = Instance.new("UICorner", G2L["c9"]);
G2L["ca"]["CornerRadius"] = UDim.new(0, 10);


-- StarterGui.omarXwiet.Toggle.LocalScript
G2L["cb"] = Instance.new("LocalScript", G2L["c9"]);



-- StarterGui.omarXwiet.Changer
G2L["cc"] = Instance.new("LocalScript", G2L["1"]);
G2L["cc"]["Name"] = [[Changer]];


-- StarterGui.omarXwiet.day
G2L["cd"] = Instance.new("TextLabel", G2L["1"]);
G2L["cd"]["TextWrapped"] = true;
G2L["cd"]["BorderSizePixel"] = 0;
G2L["cd"]["TextSize"] = 14;
G2L["cd"]["TextScaled"] = true;
G2L["cd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cd"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cd"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cd"]["BackgroundTransparency"] = 1;
G2L["cd"]["Size"] = UDim2.new(0.10324, 0, 0.04717, 0);
G2L["cd"]["Visible"] = false;
G2L["cd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cd"]["Text"] = [[Day]];
G2L["cd"]["Name"] = [[day]];
G2L["cd"]["Position"] = UDim2.new(0.44385, 0, 0.01032, 0);


-- StarterGui.omarXwiet.sigma.EspFrame.second.soundclick
local function C_1d()
local script = G2L["1d"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_1d);
-- StarterGui.omarXwiet.sigma.EspFrame.third.soundclick
local function C_21()
local script = G2L["21"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_21);
-- StarterGui.omarXwiet.sigma.EspFrame.five.soundclick
local function C_25()
local script = G2L["25"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_25);
-- StarterGui.omarXwiet.sigma.EspFrame.four.soundclick
local function C_29()
local script = G2L["29"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_29);
-- StarterGui.omarXwiet.sigma.EspFrame.LocalScript
local function C_2a()
local script = G2L["2a"];
	-- LocalScript under EspFrame
	local Players       = game:GetService("Players")
	
	-- BUTTON REFERENCES (must match your Explorer names)
	local monsterBtn    = script.Parent:WaitForChild("first")
	local animalBtn     = script.Parent:WaitForChild("second")
	local scrapBtn      = script.Parent:WaitForChild("third")
	local playerBtn     = script.Parent:WaitForChild("four")
	local berryBtn      = script.Parent:WaitForChild("five")
	
	--------------------------------------------------------------------------------
	-- GENERIC HIGHLIGHT & BILLBOARD HELPERS
	--------------------------------------------------------------------------------
	local function makeOutlineHighlight(model, tagName)
		if model:FindFirstChild(tagName) then return end
	
		-- outline-only
		local hl = Instance.new("Highlight")
		hl.Name                 = tagName
		hl.Adornee              = model
		hl.FillTransparency     = 1
		hl.OutlineTransparency  = 0
		hl.OutlineColor         = Color3.fromRGB(255, 0, 0)
		hl.Parent               = model
	
		-- billboard with model name
		local bbName = tagName .. "Billboard"
		if not model:FindFirstChild(bbName) then
			local adornee = model.PrimaryPart
			if not adornee then
				for _, p in ipairs(model:GetDescendants()) do
					if p:IsA("BasePart") then
						adornee = p
						break
					end
				end
			end
			if adornee then
				local bg = Instance.new("BillboardGui")
				bg.Name        = bbName
				bg.Adornee     = adornee
				bg.Size        = UDim2.new(0, 100, 0, 20)
				bg.StudsOffset = Vector3.new(0, adornee.Size.Y/2 + 1, 0)
				bg.AlwaysOnTop = true
				bg.Parent      = model
	
				local label = Instance.new("TextLabel")
				label.Size                   = UDim2.new(1, 0, 1, 0)
				label.BackgroundTransparency = 1
				label.TextScaled             = true
				label.Font                   = Enum.Font.GothamBold
				label.TextColor3             = Color3.fromRGB(255, 0, 0)
				label.Text                   = model.Name
				label.Parent                 = bg
			end
		end
	end
	
	local function removeHighlight(model, tagName)
		local hl = model:FindFirstChild(tagName)
		if hl then hl:Destroy() end
	
		local bb = model:FindFirstChild(tagName .. "Billboard")
		if bb then bb:Destroy() end
	end
	
	--------------------------------------------------------------------------------
	-- TOGGLE SETUP FUNCTION (for Models, with wildcard support)
	--------------------------------------------------------------------------------
	local function setupModelToggle(button, path, modelName, tagName)
		local stroke      = button:WaitForChild("UIStroke")
		local folder      = workspace:WaitForChild(path)
		local originalClr = stroke.Color
		local active      = false
		local conn        = nil
	
		local function updateStroke()
			stroke.Color = active and Color3.fromRGB(0,255,0) or originalClr
		end
	
		local function clearAll()
			if conn then conn:Disconnect() conn = nil end
			for _, m in ipairs(folder:GetChildren()) do
				if m:IsA("Model") then
					removeHighlight(m, tagName)
				end
			end
		end
	
		button.MouseButton1Click:Connect(function()
			active = not active
			updateStroke()
			clearAll()
	
			if active then
				-- initial pass
				for _, m in ipairs(folder:GetChildren()) do
					if m:IsA("Model") and (modelName == "*" or m.Name == modelName) then
						makeOutlineHighlight(m, tagName)
					end
				end
				-- hook future models
				conn = folder.ChildAdded:Connect(function(m)
					if m:IsA("Model") and (modelName == "*" or m.Name == modelName) then
						makeOutlineHighlight(m, tagName)
					end
				end)
			end
		end)
	
		updateStroke()
	end
	
	--------------------------------------------------------------------------------
	-- PLAYER ESP (outline + green nametag)
	--------------------------------------------------------------------------------
	local function setupPlayerToggle(button)
		local stroke       = button:WaitForChild("UIStroke")
		local originalClr  = stroke.Color
		local active       = false
		local playerConn   = nil
		local charConns    = {}
	
		local function updateStroke()
			stroke.Color = active and Color3.fromRGB(0,255,0) or originalClr
		end
	
		local function clearAll()
			for _, c in pairs(charConns) do c:Disconnect() end
			charConns = {}
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr.Character then
					removeHighlight(plr.Character, "PlayerESP")
					local head = plr.Character:FindFirstChild("Head")
					if head then
						local tag = head:FindFirstChild("NameTag")
						if tag then tag:Destroy() end
					end
				end
			end
			if playerConn then playerConn:Disconnect() playerConn = nil end
		end
	
		local function onCharacterAdded(plr, char)
			makeOutlineHighlight(char, "PlayerESP")
			local head = char:WaitForChild("Head", 5)
			if head then
				local bg = Instance.new("BillboardGui")
				bg.Name        = "NameTag"
				bg.Adornee     = head
				bg.Size        = UDim2.new(0,100,0,20)
				bg.StudsOffset = Vector3.new(0,2.5,0)
				bg.AlwaysOnTop = true
				bg.Parent      = head
	
				local label = Instance.new("TextLabel")
				label.Size                   = UDim2.new(1,0,1,0)
				label.BackgroundTransparency = 1
				label.TextScaled             = true
				label.TextColor3             = Color3.fromRGB(0,255,0)
				label.Font                   = Enum.Font.GothamBold
				label.Text                   = plr.DisplayName or plr.Name
				label.Parent                 = bg
			end
		end
	
		button.MouseButton1Click:Connect(function()
			active = not active
			updateStroke()
			clearAll()
	
			if active then
				for _, plr in ipairs(Players:GetPlayers()) do
					if plr.Character then
						onCharacterAdded(plr, plr.Character)
					end
					charConns[plr] = plr.CharacterAdded:Connect(function(char)
						onCharacterAdded(plr, char)
					end)
				end
				playerConn = Players.PlayerAdded:Connect(function(plr)
					charConns[plr] = plr.CharacterAdded:Connect(function(char)
						onCharacterAdded(plr, char)
					end)
				end)
			end
		end)
	
		updateStroke()
	end
	
	--------------------------------------------------------------------------------
	-- INITIALIZE ALL FIVE TOGGLES
	--------------------------------------------------------------------------------
	-- now SCPS uses "*" so it ESPs **all** Models in workspace.scps
	setupModelToggle(monsterBtn, "scps",    "*",           "MonsterESP")
	setupModelToggle(animalBtn,  "animals", "deer",        "DeerESP")
	setupModelToggle(scrapBtn,   "scraps",  "scrap",       "ScrapESP")
	setupPlayerToggle(playerBtn)
	setupModelToggle(berryBtn,   "harvest", "berry",       "BerryESP")
	
end;
task.spawn(C_2a);
-- StarterGui.omarXwiet.sigma.EspFrame.first.soundclick
local function C_2e()
local script = G2L["2e"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_2e);
-- StarterGui.omarXwiet.sigma.drag localscript
local function C_2f()
local script = G2L["2f"];
	local frame = script.Parent
	local UIS = game:GetService("UserInputService")
	
	local dragging = false
	local dragStart
	local startPos
	
	-- Update frame position immediately (no tweening)
	local function update(input)
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
	
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			update(input)
		end
	end)
	
end;
task.spawn(C_2f);
-- StarterGui.omarXwiet.sigma.MiscFrame.LocalScript
local function C_3e()
local script = G2L["3e"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local camera = workspace.CurrentCamera
	
	local frame = script.Parent -- MiscFrame
	local mainButton = frame:FindFirstChild("Selection")
	local option1 = frame:FindFirstChild("1") -- FirstPerson
	local option2 = frame:FindFirstChild("2") -- ThirdPerson
	
	-- Set positions
	local option1Pos = UDim2.new(0.465, 0, 0.178, 0)
	local option2Pos = UDim2.new(0.465, 0, 0.259, 0)
	local hiddenPos = UDim2.new(0.465, 0, 0.178, 0) -- same as option1
	
	-- Start hidden
	option1.Visible = false
	option2.Visible = false
	
	local optionsVisible = false
	
	local function tweenButton(button, targetPos, show)
		if show then
			button.Position = hiddenPos
			button.Visible = true
			local tween = TweenService:Create(button, TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
				Position = targetPos
			})
			tween:Play()
		else
			local tween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
				Position = hiddenPos
			})
			tween:Play()
			tween.Completed:Connect(function()
				button.Visible = false
			end)
		end
	end
	
	local function toggleOptions()
		optionsVisible = not optionsVisible
		tweenButton(option1, option1Pos, optionsVisible)
		tweenButton(option2, option2Pos, optionsVisible)
	end
	
	mainButton.MouseButton1Click:Connect(toggleOptions)
	
	-- FirstPerson Mode
	option1.MouseButton1Click:Connect(function()
		mainButton.Text = "FirstPerson"
		player.CameraMode = Enum.CameraMode.LockFirstPerson
	
		-- Optional: Force zoom distances tight for first-person
		player.CameraMinZoomDistance = 0.5
		player.CameraMaxZoomDistance = 0.5
	
		camera.CameraType = Enum.CameraType.Custom
		camera.CameraSubject = player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")
	
		toggleOptions()
	end)
	
	-- ThirdPerson Mode
	option2.MouseButton1Click:Connect(function()
		mainButton.Text = "ThirdPerson"
		player.CameraMode = Enum.CameraMode.Classic
	
		-- Allow normal zooming
		player.CameraMinZoomDistance = 5
		player.CameraMaxZoomDistance = 20
	
		camera.CameraType = Enum.CameraType.Custom
		camera.CameraSubject = player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")
	
		-- Force zoom out a little if still stuck zoomed in
		camera.FieldOfView = 70 -- Default is around 70
	
		toggleOptions()
	end)
	
end;
task.spawn(C_3e);
-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright.soundclick
local function C_42()
local script = G2L["42"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_42);
-- StarterGui.omarXwiet.sigma.MiscFrame.fullbright.LocalScript
local function C_43()
local script = G2L["43"];
	local button = script.Parent
	local uistroke = button:FindFirstChildOfClass("UIStroke")
	local originalColor = uistroke.Color
	local on = false
	
	-- Save original Lighting settings
	local originalLighting = {
		Brightness = game.Lighting.Brightness,
		ClockTime = game.Lighting.ClockTime,
		FogEnd = game.Lighting.FogEnd,
		Ambient = game.Lighting.Ambient,
		OutdoorAmbient = game.Lighting.OutdoorAmbient
	}
	
	-- Save original light brightnesses
	local originalLightSettings = {}
	
	for _, light in pairs(workspace:GetDescendants()) do
		if light:IsA("PointLight") or light:IsA("SurfaceLight") or light:IsA("SpotLight") then
			originalLightSettings[light] = light.Brightness
		end
	end
	
	-- Function to enable fullbright
	local function enableFullbright()
		for light, _ in pairs(originalLightSettings) do
			if light and light.Parent then
				light.Brightness = 10
			end
		end
		game.Lighting.Brightness = 5
		game.Lighting.ClockTime = 12
		game.Lighting.FogEnd = 100000
		game.Lighting.Ambient = Color3.new(1, 1, 1)
		game.Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
	end
	
	-- Function to disable fullbright (restore saved settings)
	local function disableFullbright()
		for light, originalBrightness in pairs(originalLightSettings) do
			if light and light.Parent then
				light.Brightness = originalBrightness
			end
		end
		game.Lighting.Brightness = originalLighting.Brightness
		game.Lighting.ClockTime = originalLighting.ClockTime
		game.Lighting.FogEnd = originalLighting.FogEnd
		game.Lighting.Ambient = originalLighting.Ambient
		game.Lighting.OutdoorAmbient = originalLighting.OutdoorAmbient
	end
	
	button.MouseButton1Click:Connect(function()
		on = not on
		if on then
			uistroke.Color = Color3.fromRGB(0, 255, 0) -- Green when ON
			enableFullbright()
		else
			uistroke.Color = originalColor -- Back to original stroke color
			disableFullbright()
		end
	end)
	
end;
task.spawn(C_43);
-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk.soundclick
local function C_47()
local script = G2L["47"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_47);
-- StarterGui.omarXwiet.sigma.MiscFrame.antiafk.LocalScript
local function C_48()
local script = G2L["48"];
	-- LocalScript inside the TextButton
	
	local button = script.Parent
	local uistroke = button:FindFirstChildOfClass("UIStroke")
	local originalColor = uistroke.Color
	local on = false
	local antiAfkConnection = nil
	local VirtualUser = game:GetService('VirtualUser')
	local Players = game:GetService('Players')
	local StarterGui = game:GetService('StarterGui')
	
	-- Function to enable anti-AFK
	local function enableAntiAfk()
		antiAfkConnection = Players.LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
	
	-- Function to disable anti-AFK
	local function disableAntiAfk()
		if antiAfkConnection then
			antiAfkConnection:Disconnect()
			antiAfkConnection = nil
		end
	end
	
	-- Send a notification
	local function sendNotification(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 5,
		})
	end
	
	button.MouseButton1Click:Connect(function()
		on = not on
		if on then
			uistroke.Color = Color3.fromRGB(0, 255, 0) -- Green
			enableAntiAfk()
			sendNotification("Anti-AFK Status", "Anti-AFK is ON!")
		else
			uistroke.Color = originalColor
			disableAntiAfk()
			sendNotification("Anti-AFK Status", "Anti-AFK is OFF!")
		end
	end)
	
end;
task.spawn(C_48);
-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow.soundclick
local function C_4c()
local script = G2L["4c"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_4c);
-- StarterGui.omarXwiet.sigma.MiscFrame.Textshow.LocalScript
local function C_4d()
local script = G2L["4d"];
	-- LocalScript inside the TextButton
	
	local button = script.Parent
	local uiStroke = button:FindFirstChild("UIStroke")
	
	if not uiStroke then
		warn("No UIStroke found inside the button!")
		return
	end
	
	local player = game.Players.LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("omarXwiet")
	local dayLabel = gui:WaitForChild("day")
	
	local originalColor = uiStroke.Color
	dayLabel.Visible = false
	
	local isOn = false
	local updateConnection -- to store the connection
	
	button.MouseButton1Click:Connect(function()
		isOn = not isOn
	
		if isOn then
			print("Button ON")
			uiStroke.Color = Color3.fromRGB(0, 255, 0)
	
			dayLabel.Position = UDim2.new(0.444, 0, 0.01, 0)
			dayLabel.Visible = true
	
			local cd = workspace:FindFirstChild("current_day")
			if cd and cd:IsA("ValueBase") then
				-- Immediately set it first
				dayLabel.Text = tostring(cd.Value)
	
				-- Then listen for changes
				updateConnection = cd:GetPropertyChangedSignal("Value"):Connect(function()
					dayLabel.Text = tostring(cd.Value)
				end)
			else
				warn("workspace.current_day not found or not a ValueBase")
			end
		else
			print("Button OFF")
			uiStroke.Color = originalColor
	
			dayLabel.Visible = false
	
			-- Disconnect the listener if it exists
			if updateConnection then
				updateConnection:Disconnect()
				updateConnection = nil
			end
		end
	end)
	
end;
task.spawn(C_4d);
-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog.soundclick
local function C_54()
local script = G2L["54"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_54);
-- StarterGui.omarXwiet.sigma.MiscFrame.chatlog.LocalScript
local function C_55()
local script = G2L["55"];
	local button = script.Parent
	local stroke = button:FindFirstChildOfClass("UIStroke")
	local chatService = game:GetService("TextChatService")
	local chatConfig = chatService:FindFirstChild("ChatWindowConfiguration")
	
	-- Save the original stroke color
	local originalColor = stroke.Color
	
	-- State variable
	local isOn = false
	
	button.MouseButton1Click:Connect(function()
		if not chatConfig then
			warn("ChatWindowConfiguration not found!")
			return
		end
	
		isOn = not isOn
	
		if isOn then
			stroke.Color = Color3.fromRGB(0, 255, 0) -- Green
			chatConfig.Enabled = true
		else
			stroke.Color = originalColor
			chatConfig.Enabled = false
		end
	end)
	
end;
task.spawn(C_55);
-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend.soundclick
local function C_5a()
local script = G2L["5a"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_5a);
-- StarterGui.omarXwiet.sigma.MiscFrame.ReviveFriend.LocalScript
local function C_5b()
local script = G2L["5b"];
	-- Put this inside the TextButton
	
	local button = script.Parent
	local uistroke = button:FindFirstChildOfClass("UIStroke")
	local players = game:GetService("Players")
	local localPlayer = players.LocalPlayer
	local starterGui = game:GetService("StarterGui")
	local running = false
	
	local originalColor
	if uistroke then
		originalColor = uistroke.Color
	end
	
	_G.AutoProximityPrompt = false
	_G.ProximityPromptCountdown = 0.1 -- small because we'll only turn it ON when needed
	
	-- Function to fire ProximityPrompt
	local function fireproximityprompt(Obj, Amount, Skip)
		if Obj.ClassName == "ProximityPrompt" then 
			Amount = Amount or 1
			local PromptTime = Obj.HoldDuration
			if Skip then 
				Obj.HoldDuration = 0
			end
			for i = 1, Amount do 
				Obj:InputHoldBegin()
				if not Skip then 
					task.wait(Obj.HoldDuration)
				end
				Obj:InputHoldEnd()
			end
			Obj.HoldDuration = PromptTime
		else 
			error("userdata<ProximityPrompt> expected")
		end
	end
	
	-- Proximity auto press
	local function ProximityPromptCountdown()
		task.spawn(function()
			while true do
				if _G.AutoProximityPrompt then
					for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
						if v:IsA("ProximityPrompt") then 
							fireproximityprompt(v, 1, true)
						end 
					end
				end
				task.wait(_G.ProximityPromptCountdown)
			end
		end)
	end
	
	-- Send notification
	local function sendNotification(title, text, duration)
		starterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = duration or 3
		})
	end
	
	-- Main revive checking loop
	local function startLoop()
		task.spawn(function()
			while running do
				task.wait(0.5) -- checks every half second
				for _, player in ipairs(players:GetPlayers()) do
					if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
						local hrp = player.Character.HumanoidRootPart
						if hrp:FindFirstChild("revive") then
							-- Teleport to the player
							if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
								localPlayer.Character.HumanoidRootPart.CFrame = hrp.CFrame + Vector3.new(2, 0, 0)
							end
	
							-- Try to equip Bandage
							local backpack = localPlayer:FindFirstChildOfClass("Backpack")
							if backpack then
								local bandage = backpack:FindFirstChild("Bandage")
								if bandage then
									bandage.Parent = localPlayer.Character
								else
									sendNotification("Bandage Missing", "You don't have a Bandage!", 4)
								end
							else
								sendNotification("Backpack Error", "Backpack not found!", 4)
							end
	
							-- Start Proximity spamming
							_G.AutoProximityPrompt = true
							task.wait(4) -- wait 4 seconds spamming
							_G.AutoProximityPrompt = false
	
							break -- after handling this revive, wait for next
						end
					end
				end
			end
		end)
	end
	
	-- When button clicked
	button.MouseButton1Click:Connect(function()
		running = not running
	
		if running then
			if uistroke then
				uistroke.Color = Color3.fromRGB(0, 255, 0) -- Green ON
			end
			sendNotification("Auto Revive", "Enabled", 3)
			ProximityPromptCountdown()
			startLoop()
		else
			if uistroke then
				uistroke.Color = originalColor -- back to original
			end
			_G.AutoProximityPrompt = false
			sendNotification("Auto Revive", "Disabled", 3)
		end
	end)
	
end;
task.spawn(C_5b);
-- StarterGui.omarXwiet.sigma.MiscFrame.antilag.soundclick
local function C_60()
local script = G2L["60"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_60);
-- StarterGui.omarXwiet.sigma.MiscFrame.antilag.LocalScript
local function C_61()
local script = G2L["61"];
	local button = script.Parent
	local uistroke = button:FindFirstChildOfClass("UIStroke")
	local originalColor = uistroke.Color
	local on = false
	
	-- Save original settings
	local savedMaterials = {}
	local savedMeshIds = {}
	local savedMeshTypes = {}
	local textureTransparency = {}
	local particleStates = {}
	
	-- Function to enable Antilag mode
	local function enableAntilag()
		-- Hide textures and decals
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("Texture") or obj:IsA("Decal") then
				textureTransparency[obj] = obj.Transparency
				obj.Transparency = 1
			end
		end
	
		-- Turn off particles
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("ParticleEmitter") or obj:IsA("Smoke") or obj:IsA("Fire") then
				particleStates[obj] = obj.Enabled
				obj.Enabled = false
			end
		end
	
		-- Change materials to SmoothPlastic
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("BasePart") then
				savedMaterials[obj] = obj.Material
				obj.Material = Enum.Material.SmoothPlastic
			end
		end
	
		-- Make MeshParts invisible but not destroy
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("MeshPart") then
				savedMeshIds[obj] = obj.MeshId
				obj.MeshId = "" -- Hide the mesh
			elseif obj:IsA("SpecialMesh") then
				savedMeshTypes[obj] = {MeshType = obj.MeshType, MeshId = obj.MeshId}
				obj.MeshType = Enum.MeshType.Head -- Make simple (cube or sphere)
				obj.MeshId = ""
			end
		end
	end
	
	-- Function to disable Antilag mode (restore settings)
	local function disableAntilag()
		-- Restore textures and decals
		for obj, originalTransparency in pairs(textureTransparency) do
			if obj and obj.Parent then
				obj.Transparency = originalTransparency
			end
		end
	
		-- Restore particles
		for obj, wasEnabled in pairs(particleStates) do
			if obj and obj.Parent then
				obj.Enabled = wasEnabled
			end
		end
	
		-- Restore materials
		for obj, originalMaterial in pairs(savedMaterials) do
			if obj and obj.Parent then
				obj.Material = originalMaterial
			end
		end
	
		-- Restore MeshParts
		for obj, meshId in pairs(savedMeshIds) do
			if obj and obj.Parent then
				obj.MeshId = meshId
			end
		end
	
		-- Restore SpecialMeshes
		for obj, data in pairs(savedMeshTypes) do
			if obj and obj.Parent then
				obj.MeshType = data.MeshType
				obj.MeshId = data.MeshId
			end
		end
	end
	
	-- Button toggle
	button.MouseButton1Click:Connect(function()
		on = not on
		if on then
			uistroke.Color = Color3.fromRGB(51, 234, 0) -- Orange color when Antilag ON
			enableAntilag()
		else
			uistroke.Color = originalColor
			disableAntilag()
		end
	end)
	
end;
task.spawn(C_61);
-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix.soundclick
local function C_66()
local script = G2L["66"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_66);
-- StarterGui.omarXwiet.sigma.MiscFrame.MouseFix.LocalScript
local function C_67()
local script = G2L["67"];
	-- Place this inside the TextButton
	local button = script.Parent
	local uistroke = button:FindFirstChild("UIStroke")
	
	-- Variables to track state
	local isOn = false
	local lastCursor = nil
	local originalStrokeColor = nil
	
	if uistroke then
		-- Save the original color at the start
		originalStrokeColor = uistroke.Color
	else
		warn("No UIStroke found inside the button!")
	end
	
	button.MouseButton1Click:Connect(function()
		if not uistroke then return end
	
		if not isOn then
			-- Turn ON
			isOn = true
			uistroke.Color = Color3.fromRGB(0, 255, 0) -- Green
	
			-- Save current mouse icon and reset to normal
			lastCursor = game:GetService("UserInputService").MouseIcon
			game:GetService("UserInputService").MouseIcon = ""
		else
			-- Turn OFF
			isOn = false
			uistroke.Color = originalStrokeColor -- Restore the original stroke color
	
			-- Restore last mouse icon
			if lastCursor then
				game:GetService("UserInputService").MouseIcon = lastCursor
			end
		end
	end)
	
end;
task.spawn(C_67);
-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid.soundclick
local function C_6c()
local script = G2L["6c"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_6c);
-- StarterGui.omarXwiet.sigma.MiscFrame.Bulid.LocalScript
local function C_6d()
local script = G2L["6d"];
	local button     = script.Parent
	local uiStroke   = button:WaitForChild("UIStroke")
	local originalColor = uiStroke.Color
	local isOn       = false
	
	-- Services
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Players           = game:GetService("Players")
	local StarterGui        = game:GetService("StarterGui")
	
	local craftRemote = ReplicatedStorage.remotes:WaitForChild("craft")
	local buildRemote = ReplicatedStorage.remotes:WaitForChild("build")
	local player      = Players.LocalPlayer
	
	-- Notification helper (must be under PlayerGui to work)
	local function notify(title, text)
		StarterGui:SetCore("SendNotification", {
			Title    = title,
			Text     = text,
			Duration = 3,
		})
	end
	
	-- Craft helper
	local function craftItem(name, times)
		for i = 1, times do
			craftRemote:FireServer(name)
			task.wait(0.1)
		end
	end
	
	-- Equip tool by moving it into the Character
	local function equipTool(toolName)
		local backpack = player:WaitForChild("Backpack")
		local character = player.Character or player.CharacterAdded:Wait()
		local tool = backpack:FindFirstChild(toolName)
		if not tool then
			warn("Could not equip—tool not found:", toolName)
			return false
		end
		tool.Parent = character
		return true
	end
	
	-- Build sequence data
	local builds = {
		{"Wide Wall", CFrame.new(75.45417,44.23829,417.47702,0,0,0.99999994,0,1,0,-0.99999994,0,0)},
		{"Wide Wall", CFrame.new(75.45037,44.31056,405.78558,0,0,0.99999994,0,1,0,-0.99999994,0,0)},
		{"Wide Wall", CFrame.new(75.19930,44.54174,393.71973,0,0,1,0,1,0,-1,0,0)},
		{"Wide Wall", CFrame.new(76.15218,44.12476,381.75928,-1.19e-07,0,0.99999994,0,1,0,-0.99999994,0,-1.19e-07)},
		{"Wide Wall", CFrame.new(73.32648,44.23022,370.28668,-0.5,0,0.86602557,0,1,0,-0.86602557,0,-0.5)},
		{"Wide Wall", CFrame.new(64.65643,43.95940,365.44547,1,0,0,0,1,0,0,0,1)},
		{"Wide Wall", CFrame.new(52.60754,43.89578,365.14093,1,0,0,0,1,0,0,0,1)},
		{"Wide Wall", CFrame.new(40.82299,44.90469,365.70013,1,0,0,0,1,0,0,0,1)},
		{"Wide Wall", CFrame.new(34.16106,43.62417,371.44269,-0.5,0,-0.8660255,0,1,0,0.8660255,0,-0.5)},
		{"Wide Wall", CFrame.new(28.39274,43.33579,381.76273,-0.5,0,-0.8660255,0,1,0,0.8660255,0,-0.5)},
		{"Wide Wall", CFrame.new(26.36934,43.74219,392.52423,-1.19e-07,0,1.00000012,0,1,0,-1.00000012,0,-1.19e-07)},
		{"Wide Wall", CFrame.new(24.14454,42.71170,402.05942,0.5,0,0.8660254,0,1,0,-0.8660254,0,0.5)},
		{"Wide Wall", CFrame.new(21.79236,42.81180,412.67346,0,0,0.99999994,0,1,0,-0.99999994,0,0)},
		{"Wide Wall", CFrame.new(21.77191,43.72112,424.54318,0,0,1,0,1,0,-1,0,0)},
		{"Wide Wall", CFrame.new(26.13363,41.94725,435.81873,-0.5,0,0.8660254,0,1,0,-0.8660254,0,-0.5)},
		{"Ladder",     CFrame.new(44.03486,47.67644,399.38589,0,0,1.0000001,0.5,0.8660253,0,-0.8660255,0.5,0)},
		{"Campfire",   CFrame.new(33.68341,38.88618,425.38733,1,0,0,0,1,0,0,0,1)},
		{"Campfire",   CFrame.new(53.99961,38.45222,383.27243,1,0,0,0,1,0,0,0,1)},
		{"Campfire",   CFrame.new(36.03532,49.80218,417.25925,1,0,0,0,1,0,0,0,1)},
		{"Ladder",     CFrame.new(75.56930,43.82658,381.21866,1,0,0,0,1,0,0,0,1)},
		{"Campfire",   CFrame.new(62.27824,38.83471,416.90167,1,0,0,0,1,0,0,0,1)},
		{"Ladder",     CFrame.new(26.10943,52.82488,425.48260,0.5,-0.8660254,0,0.8660254,0.5,0,0,0,1)},
		{"Ladder",     CFrame.new(16.83267,56.71584,423.77588,0,1,0,1,0,0,0,0,-1)},
	}
	
	-- Full sequence: craft → wait → equip & build → reset
	local function runSequence()
		-- Crafting
		craftItem("Wide Wall", 20)
		craftItem("Campfire", 4)
		craftItem("Ladder", 5)
	
		-- Wait a bit
		task.wait(3)
	
		-- Equip & build each
		for _, build in ipairs(builds) do
			local toolName, cf = build[1], build[2]
			if equipTool(toolName) then
				task.wait(0.2)
				buildRemote:FireServer(toolName, cf)
				task.wait(0.1)
			else
				warn("Skipped build—couldn't equip:", toolName)
			end
		end
	
		-- Turn off
		isOn = false
		uiStroke.Color = originalColor
	end
	
	-- Button click handler
	button.MouseButton1Click:Connect(function()
		if isOn then
			-- manual off
			isOn = false
			uiStroke.Color = originalColor
		else
			-- check wood stat
			local stats = player:FindFirstChild("stats")
			local wood  = stats and stats:FindFirstChild("wood") and stats.wood.Value or 0
	
			if wood < 145 then
				notify("Not enough Wood", "You need 145 Wood to start.")
				return
			end
	
			-- turn on
			isOn = true
			uiStroke.Color = Color3.fromRGB(0, 255, 0)
			task.spawn(runSequence)
		end
	end)
	
end;
task.spawn(C_6d);
-- StarterGui.omarXwiet.sigma.configframe.first.soundclick
local function C_75()
local script = G2L["75"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_75);
-- StarterGui.omarXwiet.sigma.configframe.first.LocalScript
local function C_76()
local script = G2L["76"];
	-- UltraRapidFireToggle (LocalScript under first)
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local UserInputService  = game:GetService("UserInputService")
	local RunService        = game:GetService("RunService")
	local StarterGui        = game:GetService("StarterGui")
	local Players           = game:GetService("Players")
	
	local player          = Players.LocalPlayer
	local character       = player.Character or player.CharacterAdded:Wait()
	local remotes         = ReplicatedStorage:WaitForChild("remotes")
	local shootRemote     = remotes:WaitForChild("shoot")
	
	local button          = script.Parent
	local stroke          = button:FindFirstChildWhichIsA("UIStroke")
	local origColor       = stroke and stroke.Color or Color3.new(1,1,1)
	local green           = Color3.new(0,1,0)
	
	-- Check the Submit button’s stroke color
	local screenGui       = script:FindFirstAncestorOfClass("ScreenGui")
	local submitStroke    = screenGui
		:WaitForChild("sigma")
		:WaitForChild("KeyFrame")
		:WaitForChild("Keyframe")
		:WaitForChild("submit")
		:FindFirstChildWhichIsA("UIStroke")
	
	local enabled         = false
	local firing          = false
	local rapidFireDelay  = 0.003
	
	-- Mouse reference
	local mouse = player:GetMouse()
	
	local function notify(text)
		StarterGui:SetCore("SendNotification", {
			Title    = "OmarXwiet",
			Text     = text,
			Duration = 2,
		})
	end
	
	-- Toggle on button click
	button.MouseButton1Click:Connect(function()
		if not (submitStroke and submitStroke.Color == green) then
			return notify("You need to enter the key in Keysystem")
		end
	
		enabled = not enabled
		firing = false            -- ensure we stop if we turn it off mid‐click
		if stroke then
			stroke.Color = enabled and green or origColor
		end
	end)
	
	-- Start/stop firing on mouse down/up
	UserInputService.InputBegan:Connect(function(input, processed)
		if enabled
			and not processed
			and input.UserInputType == Enum.UserInputType.MouseButton1 then
			firing = true
		end
	end)
	
	UserInputService.InputEnded:Connect(function(input, processed)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			firing = false
		end
	end)
	
	-- Continuous shoot loop
	task.spawn(function()
		while true do
			if enabled and firing then
				-- recalc character in case they respawn
				character = player.Character or player.CharacterAdded:Wait()
				local rightArm = character:FindFirstChild("RightHand")
					or character:FindFirstChild("Right Arm")
				if rightArm then
					local startPos = rightArm.Position
					local mousePos = mouse.Hit.Position
					local dir      = (mousePos - startPos).Unit
	
					local startCF  = CFrame.lookAt(startPos, startPos + dir)
					local endCF    = CFrame.lookAt(mousePos, mousePos + dir)
	
					shootRemote:FireServer(startCF, endCF)
				end
				task.wait(rapidFireDelay)
			else
				task.wait()
			end
		end
	end)
	
end;
task.spawn(C_76);
-- StarterGui.omarXwiet.sigma.configframe.second.soundclick
local function C_7a()
local script = G2L["7a"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_7a);
-- StarterGui.omarXwiet.sigma.configframe.second.LocalScript
local function C_7b()
local script = G2L["7b"];
	-- 2_AutoFarmAndCollect (LocalScript under second)
	local Players           = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Workspace         = game:GetService("Workspace")
	local StarterGui        = game:GetService("StarterGui")
	
	-- UI & toggle refs
	local button       = script.Parent
	local stroke       = button:FindFirstChildWhichIsA("UIStroke")
	local origColor    = stroke and stroke.Color or Color3.new(1,1,1)
	local green        = Color3.new(0,1,0)
	
	-- guard key (check Submit’s stroke)
	local screenGui    = script:FindFirstAncestorOfClass("ScreenGui")
	local submitStroke = screenGui
		:WaitForChild("sigma")
		:WaitForChild("KeyFrame")
		:WaitForChild("Keyframe")
		:WaitForChild("submit")
		:FindFirstChildWhichIsA("UIStroke")
	
	local function notify(text)
		StarterGui:SetCore("SendNotification", {
			Title    = "OmarXwiet",
			Text     = text,
			Duration = 2,
		})
	end
	
	-- Player + initial character refs
	local player        = Players.LocalPlayer
	local character     = player.Character or player.CharacterAdded:Wait()
	local humanoid      = character:WaitForChild("Humanoid")
	local root          = character:WaitForChild("HumanoidRootPart")
	local backpack      = player:WaitForChild("Backpack")
	local remotes       = ReplicatedStorage:WaitForChild("remotes")
	local shootRemote   = remotes:WaitForChild("shoot")
	local targetFolder  = Workspace:WaitForChild("animals")
	
	-- save home position
	local originalCFrame = root.CFrame
	
	-- Globals for auto‐prompts
	_G.AutoProximityPrompt      = false
	_G.ProximityPromptCountdown = 1
	
	-- Fire every prompt instantly
	local function ProximityPromptCountdown()
		while _G.AutoProximityPrompt do
			task.wait(_G.ProximityPromptCountdown)
			for _, v in ipairs(Workspace:GetDescendants()) do
				if v:IsA("ProximityPrompt") then
					local prev = v.HoldDuration
					v.HoldDuration = 0
					v:InputHoldBegin()
					v:InputHoldEnd()
					v.HoldDuration = prev
				end
			end
		end
	end
	
	-- Find & equip your gun
	local function findGun()
		for _, tool in ipairs(backpack:GetChildren()) do
			if tool:IsA("Tool") and tool:FindFirstChild("ammo") then
				return tool
			end
		end
	end
	
	local function equipGun()
		if character and humanoid and not character:FindFirstChildOfClass("Tool") then
			local gun = findGun()
			if gun then
				humanoid:EquipTool(gun)
			end
		end
	end
	
	-- Find a live target
	local function findTarget()
		for _, mdl in ipairs(targetFolder:GetChildren()) do
			local h = mdl:FindFirstChild("Humanoid")
			if h and h.Health > 0 then
				return mdl
			end
		end
	end
	
	-- Find collectible parts
	local function findCollectibles()
		local out = {}
		for _, part in ipairs(Workspace:GetDescendants()) do
			if part:IsA("BasePart") and part.Name == "lungs,heart,intestines" then
				if part:FindFirstChildWhichIsA("ProximityPrompt") then
					table.insert(out, part)
				end
			end
		end
		return out
	end
	
	-- Fire at a model
	local function shoot(target)
		if not root then return end
		local tp = target:FindFirstChild("HumanoidRootPart") or target.PrimaryPart
		if not tp then return end
		local fromPos = root.Position + Vector3.new(0,1.5,0)
		local dir     = (tp.Position - fromPos).Unit
		local a       = CFrame.lookAt(fromPos, fromPos + dir)
		local b       = CFrame.new(tp.Position)
		shootRemote:FireServer(a, b)
	end
	
	-- Teleport above a position
	local function teleportAbove(pos)
		if root then
			root.CFrame = CFrame.new(pos + Vector3.new(0, 10, 0))
		end
	end
	
	-- The main farm+collect routine
	local enabled = false
	local function doFarmAndCollect()
		-- start auto‐prompts
		_G.AutoProximityPrompt = true
		local promptThread = task.spawn(ProximityPromptCountdown)
	
		-- PHASE 1: kill animals
		while enabled do
			local tgt = findTarget()
			if not tgt then break end
	
			equipGun()
			while enabled and tgt.Parent and tgt:FindFirstChild("Humanoid").Health > 0 do
				teleportAbove((tgt:FindFirstChild("HumanoidRootPart") or tgt.PrimaryPart).Position)
				shoot(tgt)
				task.wait(0.1)
			end
		end
	
		-- PHASE 2: collect organs
		while enabled do
			local items = findCollectibles()
			if #items == 0 then break end
			for _, part in ipairs(items) do
				if not enabled then break end
				teleportAbove(part.Position)
				task.wait(2)   -- wait for prompt to be interactable
				task.wait(1)   -- extra buffer
			end
		end
	
		-- stop prompts
		_G.AutoProximityPrompt = false
	
		-- return home
		if root then
			root.CFrame = originalCFrame
		end
	
		-- auto-disable
		enabled = false
		if stroke then stroke.Color = origColor end
	end
	
	-- Toggle button handler
	button.MouseButton1Click:Connect(function()
		if not (submitStroke and submitStroke.Color == green) then
			return notify("You need to enter the key in Keysystem")
		end
	
		enabled = not enabled
		if stroke then stroke.Color = enabled and green or origColor end
	
		if enabled then
			task.spawn(doFarmAndCollect)
		end
	end)
	
end;
task.spawn(C_7b);
-- StarterGui.omarXwiet.sigma.configframe.third.soundclick
local function C_7f()
local script = G2L["7f"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_7f);
-- StarterGui.omarXwiet.sigma.configframe.third.LocalScript
local function C_80()
local script = G2L["80"];
	-- 3_AutoSCPHunter (LocalScript under third)
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Players           = game:GetService("Players")
	local Workspace         = game:GetService("Workspace")
	local TweenService      = game:GetService("TweenService")
	local StarterGui        = game:GetService("StarterGui")
	
	-- UI & toggle refs
	local button       = script.Parent
	local stroke       = button:FindFirstChildWhichIsA("UIStroke")
	local origColor    = stroke and stroke.Color or Color3.new(1,1,1)
	local green        = Color3.new(0,1,0)
	
	-- find your Submit’s stroke to verify real key-entry
	local screenGui    = script:FindFirstAncestorOfClass("ScreenGui")
	local submitStroke = screenGui
		:WaitForChild("sigma")
		:WaitForChild("KeyFrame")
		:WaitForChild("Keyframe")
		:WaitForChild("submit")
		:FindFirstChildWhichIsA("UIStroke")
	
	-- state
	local enabled      = false
	
	-- shortcut notification
	local function notify(text)
		StarterGui:SetCore("SendNotification", {
			Title    = "OmarXwiet",
			Text     = text,
			Duration = 2,
		})
	end
	
	-- your core SCP-hunting loop
	local function autoLoop()
		local player    = Players.LocalPlayer
		local scpsFolder= Workspace:WaitForChild("scps")
		local shootRem  = ReplicatedStorage:WaitForChild("remotes"):WaitForChild("shoot")
	
		local rapidFireDelay    = 0.01
		local flyingHeight      = 20
		local minimumSafeHeight = 10
		local tweenInfo         = TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local savedPosition
	
		while enabled do
			local character       = player.Character or player.CharacterAdded:Wait()
			local humanoidRoot    = character:FindFirstChild("HumanoidRootPart")
			local humanoid        = character:FindFirstChild("Humanoid")
			local rightArm        = character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")
	
			-- find first alive SCP
			local targetModel
			for _, m in ipairs(scpsFolder:GetChildren()) do
				local hrp = m:FindFirstChild("HumanoidRootPart")
				local hum = m:FindFirstChild("Humanoid")
				if hrp and hum and hum.Health > 0 then
					targetModel = m
					break
				end
			end
	
			if rightArm and humanoidRoot and targetModel then
				-- save start pos once
				if not savedPosition then
					savedPosition = humanoidRoot.Position
				end
	
				local targetHRP = targetModel:FindFirstChild("HumanoidRootPart")
				-- equip your gun if not holding it
				if not character:FindFirstChildOfClass("Tool") then
					for _, tool in ipairs(player.Backpack:GetChildren()) do
						if tool:IsA("Tool") and tool:FindFirstChild("ammo") then
							humanoid:EquipTool(tool)
							break
						end
					end
				end
	
				-- attack until it dies or we toggle off
				while enabled and targetModel.Parent == scpsFolder and targetModel:FindFirstChild("Humanoid").Health > 0 do
					-- fire
					local startPos = rightArm.Position
					local targetPos= targetHRP.Position
					local dir      = (targetPos - startPos).Unit
					local cf1      = CFrame.lookAt(startPos, startPos + dir)
					local cf2      = CFrame.lookAt(targetPos, targetPos + dir)
					shootRem:FireServer(cf1, cf2)
	
					-- hover above
					local goalPos = targetHRP.Position + Vector3.new(0, flyingHeight, 0)
					if goalPos.Y < minimumSafeHeight then
						goalPos = Vector3.new(goalPos.X, minimumSafeHeight, goalPos.Z)
					end
					TweenService:Create(humanoidRoot, tweenInfo, {CFrame = CFrame.new(goalPos)}):Play()
	
					task.wait(rapidFireDelay)
				end
	
			elseif savedPosition and humanoidRoot then
				-- return to start
				TweenService:Create(
					humanoidRoot,
					tweenInfo,
					{CFrame = CFrame.new(savedPosition)}
				):Play()
				savedPosition = nil
			end
	
			task.wait(0.05)
		end
	end
	
	-- toggle handler
	button.MouseButton1Click:Connect(function()
		-- only if Submit is truly green
		if not (submitStroke and submitStroke.Color == green) then
			return notify("You need to enter the key in Keysystem")
		end
	
		enabled = not enabled
		if stroke then
			stroke.Color = enabled and green or origColor
		end
	
		if enabled then
			task.spawn(autoLoop)
		end
	end)
	
end;
task.spawn(C_80);
-- StarterGui.omarXwiet.sigma.configframe.four.soundclick
local function C_84()
local script = G2L["84"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_84);
-- StarterGui.omarXwiet.sigma.configframe.four.LocalScript
local function C_85()
local script = G2L["85"];
	-- 4_SwingAxeLoopToggle (LocalScript under frour)
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local StarterGui       = game:GetService("StarterGui")
	local Players          = game:GetService("Players")
	
	local player     = Players.LocalPlayer
	local button     = script.Parent
	local stroke     = button:FindFirstChildWhichIsA("UIStroke")
	local origColor  = stroke and stroke.Color or Color3.new(1,1,1)
	local green      = Color3.new(0,1,0)
	
	local remotes    = ReplicatedStorage:WaitForChild("remotes")
	local swingRem   = remotes:WaitForChild("swing_axe")
	local swingDelay = 0.1
	
	-- grab the Submit button's stroke to verify real key-entry
	local screenGui     = script:FindFirstAncestorOfClass("ScreenGui")
	local submitStroke  = screenGui
		:WaitForChild("sigma")
		:WaitForChild("KeyFrame")
		:WaitForChild("Keyframe")
		:WaitForChild("submit")
		:FindFirstChildWhichIsA("UIStroke")
	
	local enabled = false
	
	local function notify(text)
		StarterGui:SetCore("SendNotification", {
			Title    = "OmarXwiet",
			Text     = text,
			Duration = 2,
		})
	end
	
	-- continuous auto-swing loop
	local function autoSwing()
		while enabled do
			swingRem:FireServer()
			task.wait(swingDelay)
		end
	end
	
	button.MouseButton1Click:Connect(function()
		-- block until real key entered
		if not (submitStroke and submitStroke.Color == green) then
			return notify("You need to enter the key in Keysystem")
		end
	
		enabled = not enabled
		if stroke then
			stroke.Color = enabled and green or origColor
		end
	
		if enabled then
			task.spawn(autoSwing)
		end
	end)
	
end;
task.spawn(C_85);
-- StarterGui.omarXwiet.sigma.configframe.five.soundclick
local function C_8a()
local script = G2L["8a"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_8a);
-- StarterGui.omarXwiet.sigma.configframe.five.LocalScript
local function C_8b()
local script = G2L["8b"];
	-- 5_AutoEatToggle (LocalScript under five)
	local Players      = game:GetService("Players")
	local StarterGui   = game:GetService("StarterGui")
	local Workspace    = game:GetService("Workspace")
	
	-- UI & toggle refs
	local button       = script.Parent
	local stroke       = button:FindFirstChildWhichIsA("UIStroke")
	local origColor    = stroke and stroke.Color or Color3.new(1,1,1)
	local green        = Color3.new(0,1,0)
	
	-- guard on real key (check Submit’s stroke)
	local screenGui    = script:FindFirstAncestorOfClass("ScreenGui")
	local submitStroke = screenGui
		:WaitForChild("sigma")
		:WaitForChild("KeyFrame")
		:WaitForChild("Keyframe")
		:WaitForChild("submit")
		:FindFirstChildWhichIsA("UIStroke")
	
	local function notify(text)
		StarterGui:SetCore("SendNotification", {
			Title    = "OmarXwiet",
			Text     = text,
			Duration = 2,
		})
	end
	
	-- Player & helpers
	local player = Players.LocalPlayer
	
	local function getCharacter()
		return player.Character or player.CharacterAdded:Wait()
	end
	
	local function getHungerValue()
		-- assumes hunger IntValue sits under workspace.<PlayerName>.hunger
		return Workspace:WaitForChild(player.Name):WaitForChild("hunger")
	end
	
	local function findEatTool()
		local char = getCharacter()
		local backpack = player:WaitForChild("Backpack")
		-- equipped
		for _, tool in ipairs(char:GetChildren()) do
			if tool:IsA("Tool") and tool:FindFirstChild("eat") then
				return tool
			end
		end
		-- in backpack
		for _, tool in ipairs(backpack:GetChildren()) do
			if tool:IsA("Tool") and tool:FindFirstChild("eat") then
				return tool
			end
		end
		return nil
	end
	
	local function tryToEat()
		local tool = findEatTool()
		if not tool then return end
		-- equip if needed
		if tool.Parent ~= getCharacter() then
			tool.Parent = getCharacter()
		end
		local eatRemote = tool:FindFirstChild("eat")
		if eatRemote then
			eatRemote:FireServer()
		end
	end
	
	-- Toggle logic
	local enabled = false
	button.MouseButton1Click:Connect(function()
		if not (submitStroke and submitStroke.Color == green) then
			return notify("You need to enter the key in Keysystem")
		end
		enabled = not enabled
		if stroke then
			stroke.Color = enabled and green or origColor
		end
	
		if enabled then
			task.spawn(function()
				local hunger = getHungerValue()
				while enabled do
					if hunger.Value <= 50 then
						while enabled and hunger.Value < 90 do
							tryToEat()
							task.wait(1.2)
						end
					end
					task.wait(0.5)
				end
			end)
		end
	end)
	
end;
task.spawn(C_8b);
-- StarterGui.omarXwiet.sigma.Farm.LocalScript
local function C_ab()
local script = G2L["ab"];
	-- LocalScript inside Farm (Frame under omarXwiet ScreenGui)
	
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	
	-- GUI References
	local frame = script.Parent
	local selBtn = frame:WaitForChild("Selection")
	local opt1 = frame:WaitForChild("1")
	local opt2 = frame:WaitForChild("2")
	local opt3 = frame:WaitForChild("3")
	local opt4 = frame:WaitForChild("4")
	local onOffBtn = frame:WaitForChild("on/off")
	
	-- Tween/Position Setup
	local pos1 = UDim2.new(0.528, 0, 0.178, 0)
	local pos2 = UDim2.new(0.528, 0, 0.275, 0)
	local pos3 = UDim2.new(0.528, 0, 0.369, 0)
	local pos4 = UDim2.new(0.533, 0, 0.462, 0) -- fixed here
	local hiddenPos = selBtn.Position
	
	-- State Variables
	local dropdown = false
	local running = false
	local choice = nil
	local lastCFrame = nil
	local scrapIndex = 1
	local woodIndex = 1
	local defaultBg = onOffBtn.BackgroundColor3
	
	-- Initialize UI
	opt1.Visible = false
	opt2.Visible = false
	opt3.Visible = false
	opt4.Visible = false
	opt1.Position = hiddenPos
	opt2.Position = hiddenPos
	opt3.Position = hiddenPos
	opt4.Position = hiddenPos
	onOffBtn.Text = "Off"
	onOffBtn.BackgroundColor3 = defaultBg
	selBtn.Text = "Selection"
	
	-- Tween helper
	local function tween(btn, target, show)
		if show then
			btn.Position = hiddenPos
			btn.Visible = true
			TweenService:Create(btn, TweenInfo.new(0.25, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
				Position = target
			}):Play()
		else
			local t = TweenService:Create(btn, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
				Position = hiddenPos
			})
			t:Play()
			t.Completed:Wait()
			btn.Visible = false
		end
	end
	
	-- Dropdown toggle
	selBtn.MouseButton1Click:Connect(function()
		dropdown = not dropdown
		tween(opt1, pos1, dropdown)
		tween(opt2, pos2, dropdown)
		tween(opt3, pos3, dropdown)
		tween(opt4, pos4, dropdown)
	end)
	
	-- Selection logic
	local function selectFarm(f)
		if running then
			StarterGui:SetCore("SendNotification", { Title = "Error", Text = "Turn off first to choose farm", Duration = 2 })
			return
		end
		dropdown = false
		tween(opt1, pos1, false)
		tween(opt2, pos2, false)
		tween(opt3, pos3, false)
		tween(opt4, pos4, false)
	
		choice = f
		selBtn.Text = (f == "scrap" and "Scraps") or (f == "wood" and "Wood") or (f == "berry" and "Berry") or (f == "cabbage" and "Cabbage") or "Selection"
	end
	
	opt1.MouseButton1Click:Connect(function() selectFarm("scrap") end)
	opt2.MouseButton1Click:Connect(function() selectFarm("wood") end)
	opt3.MouseButton1Click:Connect(function() selectFarm("berry") end)
	opt4.MouseButton1Click:Connect(function() selectFarm("cabbage") end)
	
	-- Proximity Prompt Helpers
	local function firePromptStandard(obj)
		if obj.ClassName == "ProximityPrompt" then
			local pt = obj.HoldDuration
			obj.HoldDuration = 0
			obj:InputHoldBegin()
			obj:InputHoldEnd()
			obj.HoldDuration = pt
		end
	end
	
	local function triggerPromptsStandard()
		local char = player.Character
		if not char then return end
		local hrp = char:FindFirstChild("HumanoidRootPart")
		if not hrp then return end
	
		for _, v in ipairs(workspace:GetDescendants()) do
			if v:IsA("ProximityPrompt") then
				local parent = v.Parent
				local part = parent and (parent:IsA("BasePart") and parent or parent:FindFirstChildWhichIsA("BasePart"))
				if part then
					local dist = (hrp.Position - part.Position).Magnitude
					if dist <= v.MaxActivationDistance + 5 then
						firePromptStandard(v)
					end
				end
			end
		end
	end
	
	-- Scrap teleport
	local function teleportScrap()
		local folder = workspace:FindFirstChild("scraps")
		if not folder then return end
		local items = {}
		for _, v in ipairs(folder:GetChildren()) do
			if v:IsA("Model") or v:IsA("BasePart") then
				table.insert(items, v)
			end
		end
		if #items == 0 then return end
		if scrapIndex > #items then scrapIndex = 1 end
	
		local target = items[scrapIndex]
		local part = target:IsA("Model") and (target:FindFirstChild("HumanoidRootPart") or target:FindFirstChildWhichIsA("BasePart")) or target
		if part and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			player.Character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0,3,0)
			task.wait(0.2)
			triggerPromptsStandard()
			task.wait(0.2)
			triggerPromptsStandard()
		end
		scrapIndex += 1
	end
	
	-- Wood teleport
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local function smoothLookAt(targetPos)
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end
		local direction = (targetPos - hrp.Position).Unit
		local goal = CFrame.new(hrp.Position, hrp.Position + direction)
		TweenService:Create(hrp, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = goal}):Play()
	end
	
	local function equipAxe()
		local backpack = player:WaitForChild("Backpack")
		local tool = backpack:FindFirstChild("Axe") or player.Character:FindFirstChild("Axe")
		if tool and tool.Parent ~= player.Character then
			tool.Parent = player.Character
		end
	end
	
	local function firePromptWood(obj, amount, skip)
		if obj.ClassName == "ProximityPrompt" then
			amount = amount or 1
			local pt = obj.HoldDuration
			if skip then obj.HoldDuration = 0 end
			for i = 1, amount do
				obj:InputHoldBegin()
				if not skip then task.wait(obj.HoldDuration) end
				obj:InputHoldEnd()
			end
			obj.HoldDuration = pt
		end
	end
	
	local function collectLogs()
		local logsFolder = workspace:FindFirstChild("logs")
		if not logsFolder then return end
	
		for _, log in ipairs(logsFolder:GetChildren()) do
			if log:IsA("Model") then
				local mainPart = log:FindFirstChild("main")
				if mainPart and mainPart:IsA("BasePart") then
					mainPart.Anchored = true
					player.Character.HumanoidRootPart.CFrame = CFrame.new(mainPart.Position + Vector3.new(0, 0.1, -2))
					smoothLookAt(mainPart.Position)
	
					task.wait(0.5)
	
					local prompt = mainPart:FindFirstChildWhichIsA("ProximityPrompt", true)
					if prompt then
						firePromptWood(prompt, 1, true)
						task.wait(0.1)
					end
				end
			end
		end
	end
	
	local function teleportWood()
		local treesFolder = workspace:FindFirstChild("trees")
		if not treesFolder then return end
	
		for _, tree in ipairs(treesFolder:GetChildren()) do
			if not running then break end
			if tree:IsA("Model") then
				local trunk = tree:FindFirstChild("Trunk", true)
				if trunk and trunk:IsA("BasePart") then
					local targetPos = trunk.Position + Vector3.new(0, 0, -4)
					player.Character.HumanoidRootPart.CFrame = CFrame.new(targetPos, trunk.Position)
					smoothLookAt(trunk.Position)
	
					task.wait(0.5)
	
					equipAxe()
					for i = 1, 10 do
						ReplicatedStorage:WaitForChild("remotes"):WaitForChild("swing_axe"):FireServer()
						task.wait(0.2)
					end
	
					task.wait(1)
					collectLogs()
				end
			end
		end
	end
	
	-- Berry teleport
	local function fireProximityPrompt(prompt)
		if not prompt or not prompt:IsA("ProximityPrompt") then return end
		if not prompt.Enabled then prompt.Enabled = true end
		local originalHold = prompt.HoldDuration
		prompt.HoldDuration = 0
		prompt:InputHoldBegin()
		prompt:InputHoldEnd()
		prompt.HoldDuration = originalHold
	end
	
	local function teleportAndHarvestBerry()
		local harvestFolder = workspace:FindFirstChild("harvest")
		if not harvestFolder then return end
	
		local berries = harvestFolder:GetChildren()
		if #berries < 11 then return end
	
		local berry = berries[11]
		local mainPart = berry:FindFirstChild("main")
		if not mainPart or not mainPart:IsA("BasePart") then return end
	
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end
	
		hrp.CFrame = mainPart.CFrame + Vector3.new(0, 3, 0)
		task.wait(0.2)
	
		local prompt = mainPart:FindFirstChildWhichIsA("ProximityPrompt")
		if prompt then
			fireProximityPrompt(prompt)
			task.wait(0.1)
			fireProximityPrompt(prompt)
		end
	end
	
	-- Cabbage teleport
	local function teleportAndHarvestCabbage()
		local buildsFolder = workspace:FindFirstChild("builds")
		if not buildsFolder then return end
	
		local cabbageFarm = buildsFolder:FindFirstChild("Cabbage Farm")
		if not cabbageFarm then return end
	
		local dirtPart = cabbageFarm:FindFirstChild("dirt")
		if not dirtPart or not dirtPart:IsA("BasePart") then return end
	
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then return end
	
		hrp.CFrame = dirtPart.CFrame + Vector3.new(0, 3, 0)
		task.wait(0.2)
	
		local prompt = dirtPart:FindFirstChildWhichIsA("ProximityPrompt")
		if prompt then
			fireProximityPrompt(prompt)
			task.wait(0.1)
			fireProximityPrompt(prompt)
		end
	end
	
	-- Loop driver
	local function startLoop()
		task.spawn(function()
			while running do
				if choice == "scrap" then
					teleportScrap()
				elseif choice == "wood" then
					teleportWood()
				elseif choice == "berry" then
					teleportAndHarvestBerry()
				elseif choice == "cabbage" then
					teleportAndHarvestCabbage()
				end
				task.wait(0.5)
			end
		end)
	end
	
	-- On/Off toggle
	onOffBtn.MouseButton1Click:Connect(function()
		if not running then
			if not choice then
				StarterGui:SetCore("SendNotification", { Title = "Error", Text = "Choose farm first", Duration = 2 })
				return
			end
			running = true
			onOffBtn.Text = "On"
			onOffBtn.BackgroundColor3 = Color3.fromRGB(0,255,0)
			lastCFrame = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.CFrame
			startLoop()
		else
			running = false
			onOffBtn.Text = "Off"
			onOffBtn.BackgroundColor3 = defaultBg
			if lastCFrame and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local hrp = player.Character.HumanoidRootPart
				hrp.CFrame = lastCFrame
				task.wait(2)
				hrp.CFrame = lastCFrame
			end
		end
	end)
	
end;
task.spawn(C_ab);
-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit.soundclick
local function C_b6()
local script = G2L["b6"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_b6);
-- StarterGui.omarXwiet.sigma.KeyFrame.Keyframe.submit.key
local function C_b7()
local script = G2L["b7"];
	-- SubmitKeyController (LocalScript under submit)
	local Players    = game:GetService("Players")
	local StarterGui = game:GetService("StarterGui")
	
	local KEY     = "wietXomar_Hub"
	local player  = Players.LocalPlayer
	
	-- UI references
	local screenGui  = script:FindFirstAncestorOfClass("ScreenGui")
	local sigma      = screenGui:WaitForChild("sigma")
	local configFr   = sigma:WaitForChild("configframe")
	local keyLabel   = configFr:WaitForChild("KEY")           -- TextLabel (initially Text="OFF", TextColor3=red)
	local keyFrame   = sigma:WaitForChild("KeyFrame")
	local innerKF    = keyFrame:WaitForChild("Keyframe")
	local textbox    = innerKF:WaitForChild("Putkeyyhere")
	local submitBtn  = script.Parent
	
	-- UIStroke on the submit button
	local stroke     = submitBtn:FindFirstChildWhichIsA("UIStroke")
	local origColor  = stroke and stroke.Color or Color3.new(1,1,1)
	local green      = Color3.new(0,1,0)
	local red        = Color3.new(1,0,0)
	
	-- Notification helper
	local function notify(msg)
		StarterGui:SetCore("SendNotification", {
			Title    = "OmarXwiet",
			Text     = msg,
			Duration = 2,
		})
	end
	
	-- Initialize UI state
	keyLabel.Text       = "OFF"
	keyLabel.TextColor3 = red
	if stroke then stroke.Color = origColor end
	
	-- Handle Submit click
	submitBtn.MouseButton1Click:Connect(function()
		local txt = textbox.Text or ""
		if txt == "" then
			return notify("Write the key")
		elseif txt ~= KEY then
			return notify("Wrong key")
		end
	
		-- Correct key entered
		notify("Key accepted!")
		if stroke then stroke.Color = green end
		keyLabel.Text       = "ON"
		keyLabel.TextColor3 = green
	end)
	
end;
task.spawn(C_b7);
-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.LocalScript
local function C_c0()
local script = G2L["c0"];
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		if setclipboard then
			setclipboard("https://discord.gg/HJSfaPTDCX")
			game.StarterGui:SetCore("SendNotification", {
				Title = "Success!",
				Text = "Copied Discord Link",
				Duration = 3
			})
		else
			warn("Clipboard function not available.")
		end
	end)
	
end;
task.spawn(C_c0);
-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.soundclick
local function C_c1()
local script = G2L["c1"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_c1);
-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.LocalScript
local function C_c7()
local script = G2L["c7"];
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		if setclipboard then
			setclipboard("omargamer8198")
			game.StarterGui:SetCore("SendNotification", {
				Title = "Success!",
				Text = "Copied Youtube Link",
				Duration = 3
			})
		else
			warn("Clipboard function not available.")
		end
	end)
	
end;
task.spawn(C_c7);
-- StarterGui.omarXwiet.sigma.KeyFrame.Copy.soundclick
local function C_c8()
local script = G2L["c8"];
	local btn = script.Parent
	local soundService = game:GetService("SoundService")
	
	-- Click sound asset ID
	local clickSound = Instance.new("Sound")
	clickSound.SoundId = "rbxassetid://1673280232"  -- Your click sound asset ID
	clickSound.Parent = btn  -- Set the sound as a child of the button
	
	-- Play click sound when button is clicked
	btn.MouseButton1Click:Connect(function()
		-- Play the sound
		clickSound:Play()
	end)
	
end;
task.spawn(C_c8);
-- StarterGui.omarXwiet.Toggle.LocalScript
local function C_cb()
local script = G2L["cb"];
	local button = script.Parent -- The TextButton inside the Bubble Gum GUI
	local bubbleGumGui = game.Players.LocalPlayer.PlayerGui:WaitForChild("omarXwiet") -- Reference to the Bubble Gum GUI
	local frame = bubbleGumGui:WaitForChild("sigma") -- The Frame named 'All' inside the Bubble Gum GUI
	
	button.MouseButton1Click:Connect(function()
		if frame.Visible then
			frame.Visible = false
			button.Text = "Show"
		else
			frame.Visible = true
			button.Text = "Hide"
		end
	end)
	
end;
task.spawn(C_cb);
-- StarterGui.omarXwiet.Changer
local function C_cc()
local script = G2L["cc"];
	-- LocalScript: UISelectionController (Debug Mode)
	-- Place this script under your ScreenGui (PlayerGui) to manage tab switching
	
	-- DEBUG: Script start
	print("[UISelectionController] Script initializing...")
	
	-- Find the parent ScreenGui
	local screenGui = script:FindFirstAncestorWhichIsA("ScreenGui")
	if not screenGui then
		warn("[UISelectionController] ERROR: Not inside a ScreenGui!")
		return
	end
	print("[UISelectionController] Found ScreenGui: " .. screenGui.Name)
	
	-- Grab Sigma and Selection
	local sigma = screenGui:FindFirstChild("sigma")
	if not sigma then
		warn("[UISelectionController] ERROR: Sigma frame not found under ScreenGui")
		return
	end
	print("[UISelectionController] Found Sigma: " .. sigma.Name)
	
	local selection = sigma:FindFirstChild("Selection")
	if not selection then
		warn("[UISelectionController] ERROR: Selection frame not found under Sigma")
		return
	end
	print("[UISelectionController] Found Selection: " .. selection.Name)
	
	-- Define tabs with button & frame names
	local tabs = {
		Esp       = {buttonName = "Esp",        frameName = "EspFrame"},
		Farm      = {buttonName = "Farm",       frameName = "Farm"},
		Misc      = {buttonName = "Misc",       frameName = "MiscFrame"},
		GunConfig = {buttonName = "gun config", frameName = "configframe"},
		Keysystem = {buttonName = "Keysystem",  frameName = "KeyFrame"},
	}
	
	-- Prepare storage
	local activeKey
	local defaultStrokes = {}
	
	-- Initialize each tab
	for key, def in pairs(tabs) do
		-- Find button
		local btn = selection:FindFirstChild(def.buttonName)
		if not btn or not btn:IsA("TextButton") then
			warn(string.format("[UISelectionController] ERROR: %s button '%s' not found or not a TextButton", key, def.buttonName))
		else
			print(string.format("[UISelectionController] Found button '%s' for %s", def.buttonName, key))
		end
		-- Find frame
		local frm = sigma:FindFirstChild(def.frameName)
		if not frm or not frm:IsA("Frame") then
			warn(string.format("[UISelectionController] ERROR: %s frame '%s' not found or not a Frame", key, def.frameName))
		else
			print(string.format("[UISelectionController] Found frame '%s' for %s", def.frameName, key))
		end
		-- Ensure UIStroke exists
		local stroke = btn:FindFirstChildOfClass("UIStroke") or Instance.new("UIStroke", btn)
		defaultStrokes[key] = stroke.Color
		-- Hide frame initially
		if frm then frm.Visible = false end
		-- Store objects
		def.button = btn
		def.frame  = frm
		def.stroke = stroke
	end
	
	-- Switch function
	local function switchTo(key)
		print("[UISelectionController] switchTo called for " .. key)
		-- Reset previous
		if activeKey and tabs[activeKey].stroke then
			tabs[activeKey].stroke.Color = defaultStrokes[activeKey]
			if tabs[activeKey].frame then tabs[activeKey].frame.Visible = false end
			print("[UISelectionController] Hiding frame for " .. activeKey)
		end
		-- Activate new
		local current = tabs[key]
		if not current then
			warn("[UISelectionController] ERROR: No tab definition for key " .. key)
			return
		end
		current.stroke.Color = Color3.new(1, 1, 1)
		if current.frame then current.frame.Visible = true end
		print("[UISelectionController] Showing frame for " .. key)
		activeKey = key
	end
	
	-- Connect clicks
	for key, def in pairs(tabs) do
		if def.button then
			def.button.Activated:Connect(function()
				print("[UISelectionController] Button " .. def.buttonName .. " activated")
				switchTo(key)
			end)
			print("[UISelectionController] Connected Activated for " .. def.buttonName)
		end
	end
	
	-- Optional: auto-open first tab on load
	-- switchTo("Esp")
end;
task.spawn(C_cc);

return G2L["1"], require;
